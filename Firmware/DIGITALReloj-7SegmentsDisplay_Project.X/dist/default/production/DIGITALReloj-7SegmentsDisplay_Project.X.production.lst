

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Aug 20 23:57:01 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.35
    48                           ; Generated 05/05/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F25K22 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  0009F6                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _digits
    88  0009F6  A0                 	db	160
    89  0009F7  F6                 	db	246
    90  0009F8  61                 	db	97
    91  0009F9  62                 	db	98
    92  0009FA  36                 	db	54
    93  0009FB  2A                 	db	42
    94  0009FC  28                 	db	40
    95  0009FD  E6                 	db	230
    96  0009FE  20                 	db	32
    97  0009FF  22                 	db	34
    98  000A00  24                 	db	36
    99  000A01  38                 	db	56
   100  000A02  A9                 	db	169
   101  000A03  70                 	db	112
   102  000A04  29                 	db	41
   103  000A05  2D                 	db	45
   104  000A06  FF                 	db	255
   105                           
   106                           ;initializer for _NUMBERS_OF_DISPLAYS
   107  000A07  06                 	db	6
   108  0000                     _TMR0L	set	4054
   109  0000                     _TMR0H	set	4055
   110  0000                     _TRISBbits	set	3987
   111  0000                     _TRISCbits	set	3988
   112  0000                     _SSP2CON2bits	set	3947
   113  0000                     _SSP2CON1	set	3948
   114  0000                     _SSP2STAT	set	3949
   115  0000                     _PORTA	set	3968
   116  0000                     _ANSELC	set	3898
   117  0000                     _ANSELB	set	3897
   118  0000                     _ANSELA	set	3896
   119  0000                     _LATBbits	set	3978
   120  0000                     _TRISA	set	3986
   121  0000                     _PIR1bits	set	3998
   122  0000                     _SSP1CON2bits	set	4037
   123  0000                     _SSP1CON1	set	4038
   124  0000                     _SSP1STAT	set	4039
   125  0000                     _OSCCONbits	set	4051
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISB	set	3987
   128  0000                     _PORTC	set	3970
   129  0000                     _PORTB	set	3969
   130  0000                     _T0CONbits	set	4053
   131  0000                     _INTCON2bits	set	4081
   132  0000                     _INTCONbits	set	4082
   133  0000                     _RCONbits	set	4048
   134  0000                     _SSP1BUF	set	4041
   135  0000                     _SSP1ADD	set	4040
   136  0000                     _SSP2BUF	set	3951
   137  0000                     _SSP2ADD	set	3950
   138  0000                     _PIR3bits	set	4004
   139                           
   140                           ; #config settings
   141                           
   142                           	psect	cinit
   143  0007F2                     __pcinit:
   144                           	callstack 0
   145  0007F2                     start_initialization:
   146                           	callstack 0
   147  0007F2                     __initialization:
   148                           	callstack 0
   149                           
   150                           ; Initialize objects allocated to COMRAM (18 bytes)
   151                           ; load TBLPTR registers with __pidataCOMRAM
   152  0007F2  0EF6               	movlw	low __pidataCOMRAM
   153  0007F4  6EF6               	movwf	tblptrl,c
   154  0007F6  0E09               	movlw	high __pidataCOMRAM
   155  0007F8  6EF7               	movwf	tblptrh,c
   156  0007FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   157  0007FC  6EF8               	movwf	tblptru,c
   158  0007FE  EE00  F036         	lfsr	0,__pdataCOMRAM
   159  000802  EE10 F012          	lfsr	1,18
   160  000806                     copy_data0:
   161  000806  0009               	tblrd		*+
   162  000808  CFF5 FFEE          	movff	tablat,postinc0
   163  00080C  50E5               	movf	postdec1,w,c
   164  00080E  50E1               	movf	fsr1l,w,c
   165  000810  E1FA               	bnz	copy_data0
   166                           
   167                           ; Clear objects allocated to COMRAM (33 bytes)
   168  000812  EE00  F001         	lfsr	0,__pbssCOMRAM
   169  000816  0E21               	movlw	33
   170  000818                     clear_0:
   171  000818  6AEE               	clrf	postinc0,c
   172  00081A  06E8               	decf	wreg,f,c
   173  00081C  E1FD               	bnz	clear_0
   174  00081E                     end_of_initialization:
   175                           	callstack 0
   176  00081E                     __end_of__initialization:
   177                           	callstack 0
   178  00081E  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   179  000820  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   180  000822  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181  000824  6EF8               	movwf	tblptru,c
   182  000826  0100               	movlb	0
   183  000828  EF0D  F005         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186  000001                     __pbssCOMRAM:
   187                           	callstack 0
   188  000001                     _dateToDisplay:
   189                           	callstack 0
   190  000001                     	ds	7
   191  000008                     _timeToDisplay:
   192                           	callstack 0
   193  000008                     	ds	7
   194  00000F                     _display_values:
   195                           	callstack 0
   196  00000F                     	ds	7
   197  000016                     _Temp:
   198                           	callstack 0
   199  000016                     	ds	1
   200  000017                     _dotsCounter:
   201                           	callstack 0
   202  000017                     	ds	1
   203  000018                     _Seconds:
   204                           	callstack 0
   205  000018                     	ds	1
   206  000019                     _mSeconds:
   207                           	callstack 0
   208  000019                     	ds	1
   209  00001A                     _tmr0_counterMs:
   210                           	callstack 0
   211  00001A                     	ds	1
   212  00001B                     _TMR0_OVR_FLAG:
   213                           	callstack 0
   214  00001B                     	ds	1
   215  00001C                     _dotsEnable:
   216                           	callstack 0
   217  00001C                     	ds	1
   218  00001D                     _displayMode:
   219                           	callstack 0
   220  00001D                     	ds	1
   221  00001E                     _pRTCArray:
   222                           	callstack 0
   223  00001E                     	ds	4
   224                           
   225                           	psect	dataCOMRAM
   226  000036                     __pdataCOMRAM:
   227                           	callstack 0
   228  000036                     _digits:
   229                           	callstack 0
   230  000036                     	ds	17
   231  000047                     _NUMBERS_OF_DISPLAYS:
   232                           	callstack 0
   233  000047                     	ds	1
   234                           
   235                           	psect	cstackCOMRAM
   236  000022                     __pcstackCOMRAM:
   237                           	callstack 0
   238  000022                     ??_INTERRUPT_LowManager:
   239                           
   240                           ; 1 bytes @ 0x0
   241  000022                     	ds	1
   242  000023                     ??_DRIVER_74HC595_ShiftOut:
   243  000023                     ??_MCU_SetModeDisplay:
   244  000023                     ?___awdiv:
   245                           	callstack 0
   246  000023                     ?___awmod:
   247                           	callstack 0
   248  000023                     I2C1_Send@BYTE:
   249                           	callstack 0
   250  000023                     ___awdiv@dividend:
   251                           	callstack 0
   252  000023                     ___awmod@dividend:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x1
   256  000023                     	ds	1
   257  000024                     Read_Bytes_From_DS1307_RTC@pData:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  000024                     	ds	1
   262  000025                     ___awdiv@divisor:
   263                           	callstack 0
   264  000025                     ___awmod@divisor:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x3
   268  000025                     	ds	1
   269  000026                     DRIVER_74HC595_ShiftOut@data:
   270                           	callstack 0
   271  000026                     Read_Bytes_From_DS1307_RTC@NoOfBytes:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x4
   275  000026                     	ds	1
   276  000027                     DRIVER_74HC595_ShiftOut@i:
   277                           	callstack 0
   278  000027                     ___awdiv@counter:
   279                           	callstack 0
   280  000027                     ___awmod@counter:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x5
   284  000027                     	ds	1
   285  000028                     DISPLAY_Update@i:
   286                           	callstack 0
   287  000028                     Read_Bytes_From_DS1307_RTC@Address:
   288                           	callstack 0
   289  000028                     ___awdiv@sign:
   290                           	callstack 0
   291  000028                     ___awmod@sign:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x6
   295  000028                     	ds	1
   296  000029                     DISPLAY_Set@D2:
   297                           	callstack 0
   298  000029                     Read_Bytes_From_DS1307_RTC@i:
   299                           	callstack 0
   300  000029                     ___awdiv@quotient:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x7
   304  000029                     	ds	1
   305  00002A                     DISPLAY_Set@D3:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x8
   309  00002A                     	ds	1
   310  00002B                     ?_Get_DS1307_RTC_Time:
   311                           	callstack 0
   312  00002B                     ?_Get_DS1307_RTC_Date:
   313                           	callstack 0
   314  00002B                     DISPLAY_Set@D4:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x9
   318  00002B                     	ds	1
   319  00002C                     DISPLAY_Set@D5:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xA
   323  00002C                     	ds	1
   324  00002D                     ??_Get_DS1307_RTC_Time:
   325  00002D                     ??_Get_DS1307_RTC_Date:
   326  00002D                     DISPLAY_Set@D6:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0xB
   330  00002D                     	ds	1
   331  00002E                     ??_DISPLAY_Set:
   332                           
   333                           ; 1 bytes @ 0xC
   334  00002E                     	ds	2
   335  000030                     DISPLAY_Set@D1:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xE
   339  000030                     	ds	1
   340  000031                     ??_SYSTEM_Initialize:
   341  000031                     UpdateTimeToDisplay@pTimeArray:
   342                           	callstack 0
   343  000031                     UpdateDateToDisplay@pDateArray:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xF
   347  000031                     	ds	2
   348  000033                     ??_UpdateTimeToDisplay:
   349  000033                     ??_UpdateDateToDisplay:
   350                           
   351                           ; 1 bytes @ 0x11
   352  000033                     	ds	1
   353  000034                     ??_MCU_SetOutDisplay:
   354                           
   355                           ; 1 bytes @ 0x12
   356  000034                     	ds	2
   357  000036                     
   358                           ; 1 bytes @ 0x14
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 28 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   378 ;;      Params:         0       0       0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels required when called: 8
   384 ;; This function calls:
   385 ;;		_SYSTEM_Initialize
   386 ;;		_SYSTEM_Process
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text0
   393  000A1A                     __ptext0:
   394                           	callstack 0
   395  000A1A                     _main:
   396                           	callstack 23
   397  000A1A                     
   398                           ;main.c: 29:     SYSTEM_Initialize();
   399  000A1A  EC77  F004         	call	_SYSTEM_Initialize	;wreg free
   400  000A1E                     l1881:
   401                           
   402                           ;main.c: 31:         SYSTEM_Process();
   403  000A1E  EC31  F004         	call	_SYSTEM_Process	;wreg free
   404  000A22  EF0F  F005         	goto	l1881
   405  000A26  EF13  F000         	goto	start
   406  000A2A                     __end_of_main:
   407                           	callstack 0
   408                           
   409 ;; *************** function _SYSTEM_Process *****************
   410 ;; Defined at:
   411 ;;		line 44 in file "mcu.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   425 ;;      Params:         0       0       0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels used: 1
   431 ;; Hardware stack levels required when called: 7
   432 ;; This function calls:
   433 ;;		_MCU_SetModeDisplay
   434 ;;		_MCU_SetOutDisplay
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text1
   441  000862                     __ptext1:
   442                           	callstack 0
   443  000862                     _SYSTEM_Process:
   444                           	callstack 23
   445  000862                     
   446                           ;mcu.c: 45:     if(TMR0_OVR_FLAG == 1){
   447  000862  041B               	decf	_TMR0_OVR_FLAG^0,w,c
   448  000864  A4D8               	btfss	status,2,c
   449  000866  EF37  F004         	goto	u691
   450  00086A  EF39  F004         	goto	u690
   451  00086E                     u691:
   452  00086E  EF4A  F004         	goto	l188
   453  000872                     u690:
   454  000872                     
   455                           ;mcu.c: 46:         tmr0_counterMs++;
   456  000872  2A1A               	incf	_tmr0_counterMs^0,f,c
   457  000874                     
   458                           ;mcu.c: 47:         if(tmr0_counterMs>99){
   459  000874  0E63               	movlw	99
   460  000876  641A               	cpfsgt	_tmr0_counterMs^0,c
   461  000878  EF40  F004         	goto	u701
   462  00087C  EF42  F004         	goto	u700
   463  000880                     u701:
   464  000880  EF48  F004         	goto	l1859
   465  000884                     u700:
   466  000884                     
   467                           ;mcu.c: 48:             tmr0_counterMs = 0;
   468  000884  0E00               	movlw	0
   469  000886  6E1A               	movwf	_tmr0_counterMs^0,c
   470  000888                     
   471                           ;mcu.c: 49:             MCU_SetModeDisplay();
   472  000888  EC63  F003         	call	_MCU_SetModeDisplay	;wreg free
   473  00088C                     
   474                           ;mcu.c: 50:             MCU_SetOutDisplay();
   475  00088C  EC2A  F003         	call	_MCU_SetOutDisplay	;wreg free
   476  000890                     l1859:
   477                           
   478                           ;mcu.c: 52:         TMR0_OVR_FLAG = 0;
   479  000890  0E00               	movlw	0
   480  000892  6E1B               	movwf	_TMR0_OVR_FLAG^0,c
   481  000894                     l188:
   482  000894  0012               	return		;funcret
   483  000896                     __end_of_SYSTEM_Process:
   484                           	callstack 0
   485                           
   486 ;; *************** function _MCU_SetOutDisplay *****************
   487 ;; Defined at:
   488 ;;		line 138 in file "mcu.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   502 ;;      Params:         0       0       0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0       0       0
   504 ;;      Temps:          2       0       0       0       0       0       0
   505 ;;      Totals:         2       0       0       0       0       0       0
   506 ;;Total ram usage:        2 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 6
   509 ;; This function calls:
   510 ;;		_Get_DS1307_RTC_Date
   511 ;;		_Get_DS1307_RTC_Time
   512 ;;		_UpdateDateToDisplay
   513 ;;		_UpdateTimeToDisplay
   514 ;; This function is called by:
   515 ;;		_SYSTEM_Process
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text2
   520  000654                     __ptext2:
   521                           	callstack 0
   522  000654                     _MCU_SetOutDisplay:
   523                           	callstack 23
   524  000654                     
   525                           ;mcu.c: 139:     switch (displayMode){
   526  000654  EF4D  F003         	goto	l1833
   527  000658                     l1819:
   528                           
   529                           ;mcu.c: 141:             dotsCounter++;
   530  000658  2A17               	incf	_dotsCounter^0,f,c
   531  00065A                     
   532                           ;mcu.c: 142:             if(dotsCounter>9){
   533  00065A  0E09               	movlw	9
   534  00065C  6417               	cpfsgt	_dotsCounter^0,c
   535  00065E  EF33  F003         	goto	u681
   536  000662  EF35  F003         	goto	u680
   537  000666                     u681:
   538  000666  EF39  F003         	goto	l1827
   539  00066A                     u680:
   540  00066A                     
   541                           ;mcu.c: 143:                 dotsCounter = 0;
   542  00066A  0E00               	movlw	0
   543  00066C  6E17               	movwf	_dotsCounter^0,c
   544  00066E                     
   545                           ;mcu.c: 144:                 dotsEnable ^= 1;
   546  00066E  0E01               	movlw	1
   547  000670  1A1C               	xorwf	_dotsEnable^0,f,c
   548  000672                     l1827:
   549                           
   550                           ;mcu.c: 146:             UpdateTimeToDisplay(Get_DS1307_RTC_Time());
   551  000672  EC38  F002         	call	_Get_DS1307_RTC_Time	;wreg free
   552  000676  C02B  F031         	movff	?_Get_DS1307_RTC_Time,UpdateTimeToDisplay@pTimeArray
   553  00067A  C02C  F032         	movff	?_Get_DS1307_RTC_Time+1,UpdateTimeToDisplay@pTimeArray+1
   554  00067E  EC5A  F001         	call	_UpdateTimeToDisplay	;wreg free
   555                           
   556                           ;mcu.c: 147:             break;
   557  000682  EF62  F003         	goto	l219
   558  000686                     l1829:
   559                           
   560                           ;mcu.c: 149:             UpdateDateToDisplay(Get_DS1307_RTC_Date());
   561  000686  EC99  F003         	call	_Get_DS1307_RTC_Date	;wreg free
   562  00068A  C02B  F031         	movff	?_Get_DS1307_RTC_Date,UpdateDateToDisplay@pDateArray
   563  00068E  C02C  F032         	movff	?_Get_DS1307_RTC_Date+1,UpdateDateToDisplay@pDateArray+1
   564  000692  ECDA  F000         	call	_UpdateDateToDisplay	;wreg free
   565                           
   566                           ;mcu.c: 150:             break;
   567  000696  EF62  F003         	goto	l219
   568  00069A                     l1833:
   569  00069A  501D               	movf	_displayMode^0,w,c
   570  00069C  6E34               	movwf	??_MCU_SetOutDisplay^0,c
   571  00069E  6A35               	clrf	(??_MCU_SetOutDisplay+1)^0,c
   572                           
   573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   574                           ; Switch size 1, requested type "simple"
   575                           ; Number of cases is 1, Range of values is 0 to 0
   576                           ; switch strategies available:
   577                           ; Name         Instructions Cycles
   578                           ; simple_byte            4     3 (average)
   579                           ;	Chosen strategy is simple_byte
   580  0006A0  5035               	movf	(??_MCU_SetOutDisplay+1)^0,w,c
   581  0006A2  0A00               	xorlw	0	; case 0
   582  0006A4  B4D8               	btfsc	status,2,c
   583  0006A6  EF57  F003         	goto	l1965
   584  0006AA  EF62  F003         	goto	l219
   585  0006AE                     l1965:
   586                           
   587                           ; Switch size 1, requested type "simple"
   588                           ; Number of cases is 2, Range of values is 0 to 1
   589                           ; switch strategies available:
   590                           ; Name         Instructions Cycles
   591                           ; simple_byte            7     4 (average)
   592                           ;	Chosen strategy is simple_byte
   593  0006AE  5034               	movf	??_MCU_SetOutDisplay^0,w,c
   594  0006B0  0A00               	xorlw	0	; case 0
   595  0006B2  B4D8               	btfsc	status,2,c
   596  0006B4  EF2C  F003         	goto	l1819
   597  0006B8  0A01               	xorlw	1	; case 1
   598  0006BA  B4D8               	btfsc	status,2,c
   599  0006BC  EF43  F003         	goto	l1829
   600  0006C0  EF62  F003         	goto	l219
   601  0006C4                     l219:
   602  0006C4  0012               	return		;funcret
   603  0006C6                     __end_of_MCU_SetOutDisplay:
   604                           	callstack 0
   605                           
   606 ;; *************** function _UpdateTimeToDisplay *****************
   607 ;; Defined at:
   608 ;;		line 156 in file "mcu.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  pTimeArray      2   15[COMRAM] PTR unsigned char 
   611 ;;		 -> pRTCArray(4), 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   623 ;;      Params:         2       0       0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0
   625 ;;      Temps:          1       0       0       0       0       0       0
   626 ;;      Totals:         3       0       0       0       0       0       0
   627 ;;Total ram usage:        3 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 5
   630 ;; This function calls:
   631 ;;		_DISPLAY_Set
   632 ;;		___awdiv
   633 ;;		___awmod
   634 ;; This function is called by:
   635 ;;		_MCU_SetOutDisplay
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text3
   640  0002B4                     __ptext3:
   641                           	callstack 0
   642  0002B4                     _UpdateTimeToDisplay:
   643                           	callstack 23
   644  0002B4                     
   645                           ;mcu.c: 158:     timeToDisplay[0] = pTimeArray[2]/10;
   646  0002B4  EE20 F002          	lfsr	2,2
   647  0002B8  5031               	movf	UpdateTimeToDisplay@pTimeArray^0,w,c
   648  0002BA  26D9               	addwf	fsr2l,f,c
   649  0002BC  5032               	movf	(UpdateTimeToDisplay@pTimeArray+1)^0,w,c
   650  0002BE  22DA               	addwfc	fsr2h,f,c
   651  0002C0  50DF               	movf	indf2,w,c
   652  0002C2  6E33               	movwf	??_UpdateTimeToDisplay^0,c
   653  0002C4  5033               	movf	??_UpdateTimeToDisplay^0,w,c
   654  0002C6  6E23               	movwf	___awdiv@dividend^0,c
   655  0002C8  6A24               	clrf	(___awdiv@dividend+1)^0,c
   656  0002CA  0E00               	movlw	0
   657  0002CC  6E26               	movwf	(___awdiv@divisor+1)^0,c
   658  0002CE  0E0A               	movlw	10
   659  0002D0  6E25               	movwf	___awdiv@divisor^0,c
   660  0002D2  ECD6  F001         	call	___awdiv	;wreg free
   661  0002D6  5023               	movf	?___awdiv^0,w,c
   662  0002D8  6E08               	movwf	_timeToDisplay^0,c
   663                           
   664                           ;mcu.c: 159:     timeToDisplay[1] = pTimeArray[2]%10;
   665  0002DA  EE20 F002          	lfsr	2,2
   666  0002DE  5031               	movf	UpdateTimeToDisplay@pTimeArray^0,w,c
   667  0002E0  26D9               	addwf	fsr2l,f,c
   668  0002E2  5032               	movf	(UpdateTimeToDisplay@pTimeArray+1)^0,w,c
   669  0002E4  22DA               	addwfc	fsr2h,f,c
   670  0002E6  50DF               	movf	indf2,w,c
   671  0002E8  6E33               	movwf	??_UpdateTimeToDisplay^0,c
   672  0002EA  5033               	movf	??_UpdateTimeToDisplay^0,w,c
   673  0002EC  6E23               	movwf	___awmod@dividend^0,c
   674  0002EE  6A24               	clrf	(___awmod@dividend+1)^0,c
   675  0002F0  0E00               	movlw	0
   676  0002F2  6E26               	movwf	(___awmod@divisor+1)^0,c
   677  0002F4  0E0A               	movlw	10
   678  0002F6  6E25               	movwf	___awmod@divisor^0,c
   679  0002F8  EC92  F002         	call	___awmod	;wreg free
   680  0002FC  5023               	movf	?___awmod^0,w,c
   681  0002FE  6E09               	movwf	(_timeToDisplay+1)^0,c
   682                           
   683                           ;mcu.c: 161:     timeToDisplay[2] = pTimeArray[1]/10;
   684  000300  EE20 F001          	lfsr	2,1
   685  000304  5031               	movf	UpdateTimeToDisplay@pTimeArray^0,w,c
   686  000306  26D9               	addwf	fsr2l,f,c
   687  000308  5032               	movf	(UpdateTimeToDisplay@pTimeArray+1)^0,w,c
   688  00030A  22DA               	addwfc	fsr2h,f,c
   689  00030C  50DF               	movf	indf2,w,c
   690  00030E  6E33               	movwf	??_UpdateTimeToDisplay^0,c
   691  000310  5033               	movf	??_UpdateTimeToDisplay^0,w,c
   692  000312  6E23               	movwf	___awdiv@dividend^0,c
   693  000314  6A24               	clrf	(___awdiv@dividend+1)^0,c
   694  000316  0E00               	movlw	0
   695  000318  6E26               	movwf	(___awdiv@divisor+1)^0,c
   696  00031A  0E0A               	movlw	10
   697  00031C  6E25               	movwf	___awdiv@divisor^0,c
   698  00031E  ECD6  F001         	call	___awdiv	;wreg free
   699  000322  5023               	movf	?___awdiv^0,w,c
   700  000324  6E0A               	movwf	(_timeToDisplay+2)^0,c
   701                           
   702                           ;mcu.c: 162:     timeToDisplay[3] = pTimeArray[1]%10;
   703  000326  EE20 F001          	lfsr	2,1
   704  00032A  5031               	movf	UpdateTimeToDisplay@pTimeArray^0,w,c
   705  00032C  26D9               	addwf	fsr2l,f,c
   706  00032E  5032               	movf	(UpdateTimeToDisplay@pTimeArray+1)^0,w,c
   707  000330  22DA               	addwfc	fsr2h,f,c
   708  000332  50DF               	movf	indf2,w,c
   709  000334  6E33               	movwf	??_UpdateTimeToDisplay^0,c
   710  000336  5033               	movf	??_UpdateTimeToDisplay^0,w,c
   711  000338  6E23               	movwf	___awmod@dividend^0,c
   712  00033A  6A24               	clrf	(___awmod@dividend+1)^0,c
   713  00033C  0E00               	movlw	0
   714  00033E  6E26               	movwf	(___awmod@divisor+1)^0,c
   715  000340  0E0A               	movlw	10
   716  000342  6E25               	movwf	___awmod@divisor^0,c
   717  000344  EC92  F002         	call	___awmod	;wreg free
   718  000348  5023               	movf	?___awmod^0,w,c
   719  00034A  6E0B               	movwf	(_timeToDisplay+3)^0,c
   720                           
   721                           ;mcu.c: 164:     timeToDisplay[4] = pTimeArray[0]/10;
   722  00034C  C031  FFD9         	movff	UpdateTimeToDisplay@pTimeArray,fsr2l
   723  000350  C032  FFDA         	movff	UpdateTimeToDisplay@pTimeArray+1,fsr2h
   724  000354  50DF               	movf	indf2,w,c
   725  000356  6E33               	movwf	??_UpdateTimeToDisplay^0,c
   726  000358  5033               	movf	??_UpdateTimeToDisplay^0,w,c
   727  00035A  6E23               	movwf	___awdiv@dividend^0,c
   728  00035C  6A24               	clrf	(___awdiv@dividend+1)^0,c
   729  00035E  0E00               	movlw	0
   730  000360  6E26               	movwf	(___awdiv@divisor+1)^0,c
   731  000362  0E0A               	movlw	10
   732  000364  6E25               	movwf	___awdiv@divisor^0,c
   733  000366  ECD6  F001         	call	___awdiv	;wreg free
   734  00036A  5023               	movf	?___awdiv^0,w,c
   735  00036C  6E0C               	movwf	(_timeToDisplay+4)^0,c
   736                           
   737                           ;mcu.c: 165:     timeToDisplay[5] = pTimeArray[0]%10;
   738  00036E  C031  FFD9         	movff	UpdateTimeToDisplay@pTimeArray,fsr2l
   739  000372  C032  FFDA         	movff	UpdateTimeToDisplay@pTimeArray+1,fsr2h
   740  000376  50DF               	movf	indf2,w,c
   741  000378  6E33               	movwf	??_UpdateTimeToDisplay^0,c
   742  00037A  5033               	movf	??_UpdateTimeToDisplay^0,w,c
   743  00037C  6E23               	movwf	___awmod@dividend^0,c
   744  00037E  6A24               	clrf	(___awmod@dividend+1)^0,c
   745  000380  0E00               	movlw	0
   746  000382  6E26               	movwf	(___awmod@divisor+1)^0,c
   747  000384  0E0A               	movlw	10
   748  000386  6E25               	movwf	___awmod@divisor^0,c
   749  000388  EC92  F002         	call	___awmod	;wreg free
   750  00038C  5023               	movf	?___awmod^0,w,c
   751  00038E  6E0D               	movwf	(_timeToDisplay+5)^0,c
   752                           
   753                           ;mcu.c: 172:    DISPLAY_Set(timeToDisplay[0], timeToDisplay[1], timeToDisplay[2], timeTo
      +                          Display[3], timeToDisplay[4], timeToDisplay[5]);
   754  000390  C009  F029         	movff	_timeToDisplay+1,DISPLAY_Set@D2
   755  000394  C00A  F02A         	movff	_timeToDisplay+2,DISPLAY_Set@D3
   756  000398  C00B  F02B         	movff	_timeToDisplay+3,DISPLAY_Set@D4
   757  00039C  C00C  F02C         	movff	_timeToDisplay+4,DISPLAY_Set@D5
   758  0003A0  C00D  F02D         	movff	_timeToDisplay+5,DISPLAY_Set@D6
   759  0003A4  5008               	movf	_timeToDisplay^0,w,c
   760  0003A6  EC15  F000         	call	_DISPLAY_Set
   761  0003AA  0012               	return		;funcret
   762  0003AC                     __end_of_UpdateTimeToDisplay:
   763                           	callstack 0
   764                           
   765 ;; *************** function _UpdateDateToDisplay *****************
   766 ;; Defined at:
   767 ;;		line 175 in file "mcu.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  pDateArray      2   15[COMRAM] PTR unsigned char 
   770 ;;		 -> pRTCArray(4), 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   782 ;;      Params:         2       0       0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0
   784 ;;      Temps:          1       0       0       0       0       0       0
   785 ;;      Totals:         3       0       0       0       0       0       0
   786 ;;Total ram usage:        3 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 5
   789 ;; This function calls:
   790 ;;		_DISPLAY_Set
   791 ;;		___awdiv
   792 ;;		___awmod
   793 ;; This function is called by:
   794 ;;		_MCU_SetOutDisplay
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text4
   799  0001B4                     __ptext4:
   800                           	callstack 0
   801  0001B4                     _UpdateDateToDisplay:
   802                           	callstack 23
   803  0001B4                     
   804                           ;mcu.c: 177:     dateToDisplay[0] = pDateArray[1]/10;
   805  0001B4  EE20 F001          	lfsr	2,1
   806  0001B8  5031               	movf	UpdateDateToDisplay@pDateArray^0,w,c
   807  0001BA  26D9               	addwf	fsr2l,f,c
   808  0001BC  5032               	movf	(UpdateDateToDisplay@pDateArray+1)^0,w,c
   809  0001BE  22DA               	addwfc	fsr2h,f,c
   810  0001C0  50DF               	movf	indf2,w,c
   811  0001C2  6E33               	movwf	??_UpdateDateToDisplay^0,c
   812  0001C4  5033               	movf	??_UpdateDateToDisplay^0,w,c
   813  0001C6  6E23               	movwf	___awdiv@dividend^0,c
   814  0001C8  6A24               	clrf	(___awdiv@dividend+1)^0,c
   815  0001CA  0E00               	movlw	0
   816  0001CC  6E26               	movwf	(___awdiv@divisor+1)^0,c
   817  0001CE  0E0A               	movlw	10
   818  0001D0  6E25               	movwf	___awdiv@divisor^0,c
   819  0001D2  ECD6  F001         	call	___awdiv	;wreg free
   820  0001D6  5023               	movf	?___awdiv^0,w,c
   821  0001D8  6E01               	movwf	_dateToDisplay^0,c
   822                           
   823                           ;mcu.c: 178:     dateToDisplay[1] = pDateArray[1]%10;
   824  0001DA  EE20 F001          	lfsr	2,1
   825  0001DE  5031               	movf	UpdateDateToDisplay@pDateArray^0,w,c
   826  0001E0  26D9               	addwf	fsr2l,f,c
   827  0001E2  5032               	movf	(UpdateDateToDisplay@pDateArray+1)^0,w,c
   828  0001E4  22DA               	addwfc	fsr2h,f,c
   829  0001E6  50DF               	movf	indf2,w,c
   830  0001E8  6E33               	movwf	??_UpdateDateToDisplay^0,c
   831  0001EA  5033               	movf	??_UpdateDateToDisplay^0,w,c
   832  0001EC  6E23               	movwf	___awmod@dividend^0,c
   833  0001EE  6A24               	clrf	(___awmod@dividend+1)^0,c
   834  0001F0  0E00               	movlw	0
   835  0001F2  6E26               	movwf	(___awmod@divisor+1)^0,c
   836  0001F4  0E0A               	movlw	10
   837  0001F6  6E25               	movwf	___awmod@divisor^0,c
   838  0001F8  EC92  F002         	call	___awmod	;wreg free
   839  0001FC  5023               	movf	?___awmod^0,w,c
   840  0001FE  6E02               	movwf	(_dateToDisplay+1)^0,c
   841                           
   842                           ;mcu.c: 180:     dateToDisplay[2] = pDateArray[2]/10;
   843  000200  EE20 F002          	lfsr	2,2
   844  000204  5031               	movf	UpdateDateToDisplay@pDateArray^0,w,c
   845  000206  26D9               	addwf	fsr2l,f,c
   846  000208  5032               	movf	(UpdateDateToDisplay@pDateArray+1)^0,w,c
   847  00020A  22DA               	addwfc	fsr2h,f,c
   848  00020C  50DF               	movf	indf2,w,c
   849  00020E  6E33               	movwf	??_UpdateDateToDisplay^0,c
   850  000210  5033               	movf	??_UpdateDateToDisplay^0,w,c
   851  000212  6E23               	movwf	___awdiv@dividend^0,c
   852  000214  6A24               	clrf	(___awdiv@dividend+1)^0,c
   853  000216  0E00               	movlw	0
   854  000218  6E26               	movwf	(___awdiv@divisor+1)^0,c
   855  00021A  0E0A               	movlw	10
   856  00021C  6E25               	movwf	___awdiv@divisor^0,c
   857  00021E  ECD6  F001         	call	___awdiv	;wreg free
   858  000222  5023               	movf	?___awdiv^0,w,c
   859  000224  6E03               	movwf	(_dateToDisplay+2)^0,c
   860                           
   861                           ;mcu.c: 181:     dateToDisplay[3] = pDateArray[2]%10;
   862  000226  EE20 F002          	lfsr	2,2
   863  00022A  5031               	movf	UpdateDateToDisplay@pDateArray^0,w,c
   864  00022C  26D9               	addwf	fsr2l,f,c
   865  00022E  5032               	movf	(UpdateDateToDisplay@pDateArray+1)^0,w,c
   866  000230  22DA               	addwfc	fsr2h,f,c
   867  000232  50DF               	movf	indf2,w,c
   868  000234  6E33               	movwf	??_UpdateDateToDisplay^0,c
   869  000236  5033               	movf	??_UpdateDateToDisplay^0,w,c
   870  000238  6E23               	movwf	___awmod@dividend^0,c
   871  00023A  6A24               	clrf	(___awmod@dividend+1)^0,c
   872  00023C  0E00               	movlw	0
   873  00023E  6E26               	movwf	(___awmod@divisor+1)^0,c
   874  000240  0E0A               	movlw	10
   875  000242  6E25               	movwf	___awmod@divisor^0,c
   876  000244  EC92  F002         	call	___awmod	;wreg free
   877  000248  5023               	movf	?___awmod^0,w,c
   878  00024A  6E04               	movwf	(_dateToDisplay+3)^0,c
   879                           
   880                           ;mcu.c: 183:     dateToDisplay[4] = pDateArray[3]/10;
   881  00024C  EE20 F003          	lfsr	2,3
   882  000250  5031               	movf	UpdateDateToDisplay@pDateArray^0,w,c
   883  000252  26D9               	addwf	fsr2l,f,c
   884  000254  5032               	movf	(UpdateDateToDisplay@pDateArray+1)^0,w,c
   885  000256  22DA               	addwfc	fsr2h,f,c
   886  000258  50DF               	movf	indf2,w,c
   887  00025A  6E33               	movwf	??_UpdateDateToDisplay^0,c
   888  00025C  5033               	movf	??_UpdateDateToDisplay^0,w,c
   889  00025E  6E23               	movwf	___awdiv@dividend^0,c
   890  000260  6A24               	clrf	(___awdiv@dividend+1)^0,c
   891  000262  0E00               	movlw	0
   892  000264  6E26               	movwf	(___awdiv@divisor+1)^0,c
   893  000266  0E0A               	movlw	10
   894  000268  6E25               	movwf	___awdiv@divisor^0,c
   895  00026A  ECD6  F001         	call	___awdiv	;wreg free
   896  00026E  5023               	movf	?___awdiv^0,w,c
   897  000270  6E05               	movwf	(_dateToDisplay+4)^0,c
   898                           
   899                           ;mcu.c: 184:     dateToDisplay[5] = pDateArray[3]%10;
   900  000272  EE20 F003          	lfsr	2,3
   901  000276  5031               	movf	UpdateDateToDisplay@pDateArray^0,w,c
   902  000278  26D9               	addwf	fsr2l,f,c
   903  00027A  5032               	movf	(UpdateDateToDisplay@pDateArray+1)^0,w,c
   904  00027C  22DA               	addwfc	fsr2h,f,c
   905  00027E  50DF               	movf	indf2,w,c
   906  000280  6E33               	movwf	??_UpdateDateToDisplay^0,c
   907  000282  5033               	movf	??_UpdateDateToDisplay^0,w,c
   908  000284  6E23               	movwf	___awmod@dividend^0,c
   909  000286  6A24               	clrf	(___awmod@dividend+1)^0,c
   910  000288  0E00               	movlw	0
   911  00028A  6E26               	movwf	(___awmod@divisor+1)^0,c
   912  00028C  0E0A               	movlw	10
   913  00028E  6E25               	movwf	___awmod@divisor^0,c
   914  000290  EC92  F002         	call	___awmod	;wreg free
   915  000294  5023               	movf	?___awmod^0,w,c
   916  000296  6E06               	movwf	(_dateToDisplay+5)^0,c
   917                           
   918                           ;mcu.c: 196:     DISPLAY_Set(dateToDisplay[0], dateToDisplay[1], dateToDisplay[2], dateT
      +                          oDisplay[3], dateToDisplay[4], dateToDisplay[5]);
   919  000298  C002  F029         	movff	_dateToDisplay+1,DISPLAY_Set@D2
   920  00029C  C003  F02A         	movff	_dateToDisplay+2,DISPLAY_Set@D3
   921  0002A0  C004  F02B         	movff	_dateToDisplay+3,DISPLAY_Set@D4
   922  0002A4  C005  F02C         	movff	_dateToDisplay+4,DISPLAY_Set@D5
   923  0002A8  C006  F02D         	movff	_dateToDisplay+5,DISPLAY_Set@D6
   924  0002AC  5001               	movf	_dateToDisplay^0,w,c
   925  0002AE  EC15  F000         	call	_DISPLAY_Set
   926  0002B2  0012               	return		;funcret
   927  0002B4                     __end_of_UpdateDateToDisplay:
   928                           	callstack 0
   929                           
   930 ;; *************** function ___awmod *****************
   931 ;; Defined at:
   932 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  dividend        2    1[COMRAM] int 
   935 ;;  divisor         2    3[COMRAM] int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  sign            1    6[COMRAM] unsigned char 
   938 ;;  counter         1    5[COMRAM] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    1[COMRAM] int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   948 ;;      Params:         4       0       0       0       0       0       0
   949 ;;      Locals:         2       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0
   951 ;;      Totals:         6       0       0       0       0       0       0
   952 ;;Total ram usage:        6 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 2
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_UpdateTimeToDisplay
   959 ;;		_UpdateDateToDisplay
   960 ;;		_Set_DS1307_RTC_Time
   961 ;;		_Set_DS1307_RTC_Date
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text5
   966  000524                     __ptext5:
   967                           	callstack 0
   968  000524                     ___awmod:
   969                           	callstack 25
   970  000524  0E00               	movlw	0
   971  000526  6E28               	movwf	___awmod@sign^0,c
   972  000528  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
   973  00052A  EF9B  F002         	goto	u600
   974  00052E  EF99  F002         	goto	u601
   975  000532                     u601:
   976  000532  EFA1  F002         	goto	l1735
   977  000536                     u600:
   978  000536  6C23               	negf	___awmod@dividend^0,c
   979  000538  1E24               	comf	(___awmod@dividend+1)^0,f,c
   980  00053A  B0D8               	btfsc	status,0,c
   981  00053C  2A24               	incf	(___awmod@dividend+1)^0,f,c
   982  00053E  0E01               	movlw	1
   983  000540  6E28               	movwf	___awmod@sign^0,c
   984  000542                     l1735:
   985  000542  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
   986  000544  EFA8  F002         	goto	u610
   987  000548  EFA6  F002         	goto	u611
   988  00054C                     u611:
   989  00054C  EFAC  F002         	goto	l1739
   990  000550                     u610:
   991  000550  6C25               	negf	___awmod@divisor^0,c
   992  000552  1E26               	comf	(___awmod@divisor+1)^0,f,c
   993  000554  B0D8               	btfsc	status,0,c
   994  000556  2A26               	incf	(___awmod@divisor+1)^0,f,c
   995  000558                     l1739:
   996  000558  5025               	movf	___awmod@divisor^0,w,c
   997  00055A  1026               	iorwf	(___awmod@divisor+1)^0,w,c
   998  00055C  B4D8               	btfsc	status,2,c
   999  00055E  EFB3  F002         	goto	u621
  1000  000562  EFB5  F002         	goto	u620
  1001  000566                     u621:
  1002  000566  EFD9  F002         	goto	l1755
  1003  00056A                     u620:
  1004  00056A  0E01               	movlw	1
  1005  00056C  6E27               	movwf	___awmod@counter^0,c
  1006  00056E  EFBD  F002         	goto	l1745
  1007  000572                     l1743:
  1008  000572  90D8               	bcf	status,0,c
  1009  000574  3625               	rlcf	___awmod@divisor^0,f,c
  1010  000576  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  1011  000578  2A27               	incf	___awmod@counter^0,f,c
  1012  00057A                     l1745:
  1013  00057A  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  1014  00057C  EFC2  F002         	goto	u631
  1015  000580  EFC4  F002         	goto	u630
  1016  000584                     u631:
  1017  000584  EFB9  F002         	goto	l1743
  1018  000588                     u630:
  1019  000588                     l1747:
  1020  000588  5025               	movf	___awmod@divisor^0,w,c
  1021  00058A  5C23               	subwf	___awmod@dividend^0,w,c
  1022  00058C  5026               	movf	(___awmod@divisor+1)^0,w,c
  1023  00058E  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  1024  000590  A0D8               	btfss	status,0,c
  1025  000592  EFCD  F002         	goto	u641
  1026  000596  EFCF  F002         	goto	u640
  1027  00059A                     u641:
  1028  00059A  EFD3  F002         	goto	l1751
  1029  00059E                     u640:
  1030  00059E  5025               	movf	___awmod@divisor^0,w,c
  1031  0005A0  5E23               	subwf	___awmod@dividend^0,f,c
  1032  0005A2  5026               	movf	(___awmod@divisor+1)^0,w,c
  1033  0005A4  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  1034  0005A6                     l1751:
  1035  0005A6  90D8               	bcf	status,0,c
  1036  0005A8  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  1037  0005AA  3225               	rrcf	___awmod@divisor^0,f,c
  1038  0005AC  2E27               	decfsz	___awmod@counter^0,f,c
  1039  0005AE  EFC4  F002         	goto	l1747
  1040  0005B2                     l1755:
  1041  0005B2  5028               	movf	___awmod@sign^0,w,c
  1042  0005B4  B4D8               	btfsc	status,2,c
  1043  0005B6  EFDF  F002         	goto	u651
  1044  0005BA  EFE1  F002         	goto	u650
  1045  0005BE                     u651:
  1046  0005BE  EFE5  F002         	goto	l1759
  1047  0005C2                     u650:
  1048  0005C2  6C23               	negf	___awmod@dividend^0,c
  1049  0005C4  1E24               	comf	(___awmod@dividend+1)^0,f,c
  1050  0005C6  B0D8               	btfsc	status,0,c
  1051  0005C8  2A24               	incf	(___awmod@dividend+1)^0,f,c
  1052  0005CA                     l1759:
  1053  0005CA  C023  F023         	movff	___awmod@dividend,?___awmod
  1054  0005CE  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  1055  0005D2  0012               	return		;funcret
  1056  0005D4                     __end_of___awmod:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function ___awdiv *****************
  1060 ;; Defined at:
  1061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  dividend        2    1[COMRAM] int 
  1064 ;;  divisor         2    3[COMRAM] int 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  quotient        2    7[COMRAM] int 
  1067 ;;  sign            1    6[COMRAM] unsigned char 
  1068 ;;  counter         1    5[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  2    1[COMRAM] int 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         4       0       0       0       0       0       0
  1079 ;;      Locals:         4       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0
  1081 ;;      Totals:         8       0       0       0       0       0       0
  1082 ;;Total ram usage:        8 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 2
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_UpdateTimeToDisplay
  1089 ;;		_UpdateDateToDisplay
  1090 ;;		_Set_DS1307_RTC_Time
  1091 ;;		_Set_DS1307_RTC_Date
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text6
  1096  0003AC                     __ptext6:
  1097                           	callstack 0
  1098  0003AC                     ___awdiv:
  1099                           	callstack 25
  1100  0003AC  0E00               	movlw	0
  1101  0003AE  6E28               	movwf	___awdiv@sign^0,c
  1102  0003B0  BE26               	btfsc	(___awdiv@divisor+1)^0,7,c
  1103  0003B2  EFDF  F001         	goto	u540
  1104  0003B6  EFDD  F001         	goto	u541
  1105  0003BA                     u541:
  1106  0003BA  EFE5  F001         	goto	l1691
  1107  0003BE                     u540:
  1108  0003BE  6C25               	negf	___awdiv@divisor^0,c
  1109  0003C0  1E26               	comf	(___awdiv@divisor+1)^0,f,c
  1110  0003C2  B0D8               	btfsc	status,0,c
  1111  0003C4  2A26               	incf	(___awdiv@divisor+1)^0,f,c
  1112  0003C6  0E01               	movlw	1
  1113  0003C8  6E28               	movwf	___awdiv@sign^0,c
  1114  0003CA                     l1691:
  1115  0003CA  BE24               	btfsc	(___awdiv@dividend+1)^0,7,c
  1116  0003CC  EFEC  F001         	goto	u550
  1117  0003D0  EFEA  F001         	goto	u551
  1118  0003D4                     u551:
  1119  0003D4  EFF2  F001         	goto	l1697
  1120  0003D8                     u550:
  1121  0003D8  6C23               	negf	___awdiv@dividend^0,c
  1122  0003DA  1E24               	comf	(___awdiv@dividend+1)^0,f,c
  1123  0003DC  B0D8               	btfsc	status,0,c
  1124  0003DE  2A24               	incf	(___awdiv@dividend+1)^0,f,c
  1125  0003E0  0E01               	movlw	1
  1126  0003E2  1A28               	xorwf	___awdiv@sign^0,f,c
  1127  0003E4                     l1697:
  1128  0003E4  0E00               	movlw	0
  1129  0003E6  6E2A               	movwf	(___awdiv@quotient+1)^0,c
  1130  0003E8  0E00               	movlw	0
  1131  0003EA  6E29               	movwf	___awdiv@quotient^0,c
  1132  0003EC  5025               	movf	___awdiv@divisor^0,w,c
  1133  0003EE  1026               	iorwf	(___awdiv@divisor+1)^0,w,c
  1134  0003F0  B4D8               	btfsc	status,2,c
  1135  0003F2  EFFD  F001         	goto	u561
  1136  0003F6  EFFF  F001         	goto	u560
  1137  0003FA                     u561:
  1138  0003FA  EF27  F002         	goto	l1719
  1139  0003FE                     u560:
  1140  0003FE  0E01               	movlw	1
  1141  000400  6E27               	movwf	___awdiv@counter^0,c
  1142  000402  EF07  F002         	goto	l1705
  1143  000406                     l1703:
  1144  000406  90D8               	bcf	status,0,c
  1145  000408  3625               	rlcf	___awdiv@divisor^0,f,c
  1146  00040A  3626               	rlcf	(___awdiv@divisor+1)^0,f,c
  1147  00040C  2A27               	incf	___awdiv@counter^0,f,c
  1148  00040E                     l1705:
  1149  00040E  AE26               	btfss	(___awdiv@divisor+1)^0,7,c
  1150  000410  EF0C  F002         	goto	u571
  1151  000414  EF0E  F002         	goto	u570
  1152  000418                     u571:
  1153  000418  EF03  F002         	goto	l1703
  1154  00041C                     u570:
  1155  00041C                     l1707:
  1156  00041C  90D8               	bcf	status,0,c
  1157  00041E  3629               	rlcf	___awdiv@quotient^0,f,c
  1158  000420  362A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1159  000422  5025               	movf	___awdiv@divisor^0,w,c
  1160  000424  5C23               	subwf	___awdiv@dividend^0,w,c
  1161  000426  5026               	movf	(___awdiv@divisor+1)^0,w,c
  1162  000428  5824               	subwfb	(___awdiv@dividend+1)^0,w,c
  1163  00042A  A0D8               	btfss	status,0,c
  1164  00042C  EF1A  F002         	goto	u581
  1165  000430  EF1C  F002         	goto	u580
  1166  000434                     u581:
  1167  000434  EF21  F002         	goto	l1715
  1168  000438                     u580:
  1169  000438  5025               	movf	___awdiv@divisor^0,w,c
  1170  00043A  5E23               	subwf	___awdiv@dividend^0,f,c
  1171  00043C  5026               	movf	(___awdiv@divisor+1)^0,w,c
  1172  00043E  5A24               	subwfb	(___awdiv@dividend+1)^0,f,c
  1173  000440  8029               	bsf	___awdiv@quotient^0,0,c
  1174  000442                     l1715:
  1175  000442  90D8               	bcf	status,0,c
  1176  000444  3226               	rrcf	(___awdiv@divisor+1)^0,f,c
  1177  000446  3225               	rrcf	___awdiv@divisor^0,f,c
  1178  000448  2E27               	decfsz	___awdiv@counter^0,f,c
  1179  00044A  EF0E  F002         	goto	l1707
  1180  00044E                     l1719:
  1181  00044E  5028               	movf	___awdiv@sign^0,w,c
  1182  000450  B4D8               	btfsc	status,2,c
  1183  000452  EF2D  F002         	goto	u591
  1184  000456  EF2F  F002         	goto	u590
  1185  00045A                     u591:
  1186  00045A  EF33  F002         	goto	l1723
  1187  00045E                     u590:
  1188  00045E  6C29               	negf	___awdiv@quotient^0,c
  1189  000460  1E2A               	comf	(___awdiv@quotient+1)^0,f,c
  1190  000462  B0D8               	btfsc	status,0,c
  1191  000464  2A2A               	incf	(___awdiv@quotient+1)^0,f,c
  1192  000466                     l1723:
  1193  000466  C029  F023         	movff	___awdiv@quotient,?___awdiv
  1194  00046A  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  1195  00046E  0012               	return		;funcret
  1196  000470                     __end_of___awdiv:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _Get_DS1307_RTC_Time *****************
  1200 ;; Defined at:
  1201 ;;		line 143 in file "ds1307.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  2    9[COMRAM] PTR unsigned char 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1215 ;;      Params:         2       0       0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0
  1217 ;;      Temps:          1       0       0       0       0       0       0
  1218 ;;      Totals:         3       0       0       0       0       0       0
  1219 ;;Total ram usage:        3 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; Hardware stack levels required when called: 4
  1222 ;; This function calls:
  1223 ;;		_Read_Bytes_From_DS1307_RTC
  1224 ;; This function is called by:
  1225 ;;		_MCU_SetOutDisplay
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text7
  1230  000470                     __ptext7:
  1231                           	callstack 0
  1232  000470                     _Get_DS1307_RTC_Time:
  1233                           	callstack 24
  1234  000470                     
  1235                           ;ds1307.c: 146:  Read_Bytes_From_DS1307_RTC(0x00, pRTCArray, 3);
  1236  000470  0E1E               	movlw	low _pRTCArray
  1237  000472  6E24               	movwf	Read_Bytes_From_DS1307_RTC@pData^0,c
  1238  000474  0E00               	movlw	high _pRTCArray
  1239  000476  6E25               	movwf	(Read_Bytes_From_DS1307_RTC@pData+1)^0,c
  1240  000478  0E00               	movlw	0
  1241  00047A  6E27               	movwf	(Read_Bytes_From_DS1307_RTC@NoOfBytes+1)^0,c
  1242  00047C  0E03               	movlw	3
  1243  00047E  6E26               	movwf	Read_Bytes_From_DS1307_RTC@NoOfBytes^0,c
  1244  000480  0E00               	movlw	0
  1245  000482  ECEA  F002         	call	_Read_Bytes_From_DS1307_RTC
  1246  000486                     
  1247                           ;ds1307.c: 149:  Temp = pRTCArray[0];
  1248  000486  C01E  F016         	movff	_pRTCArray,_Temp
  1249  00048A                     
  1250                           ;ds1307.c: 150:  pRTCArray[0] = ((Temp&0x7F)>>4)*10 + (Temp&0x0F);
  1251  00048A  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Time
  1252  00048E  0E0F               	movlw	15
  1253  000490  162D               	andwf	??_Get_DS1307_RTC_Time^0,f,c
  1254  000492  3816               	swapf	_Temp^0,w,c
  1255  000494  0B0F               	andlw	15
  1256  000496  0B07               	andlw	7
  1257  000498  0D0A               	mullw	10
  1258  00049A  50F3               	movf	243,w,c
  1259  00049C  242D               	addwf	??_Get_DS1307_RTC_Time^0,w,c
  1260  00049E  6E1E               	movwf	_pRTCArray^0,c
  1261  0004A0                     
  1262                           ;ds1307.c: 153:  Temp = pRTCArray[1];
  1263  0004A0  C01F  F016         	movff	_pRTCArray+1,_Temp
  1264  0004A4                     
  1265                           ;ds1307.c: 154:  pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  1266  0004A4  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Time
  1267  0004A8  0E0F               	movlw	15
  1268  0004AA  162D               	andwf	??_Get_DS1307_RTC_Time^0,f,c
  1269  0004AC  3816               	swapf	_Temp^0,w,c
  1270  0004AE  0B0F               	andlw	15
  1271  0004B0  0D0A               	mullw	10
  1272  0004B2  50F3               	movf	243,w,c
  1273  0004B4  242D               	addwf	??_Get_DS1307_RTC_Time^0,w,c
  1274  0004B6  6E1F               	movwf	(_pRTCArray+1)^0,c
  1275  0004B8                     
  1276                           ;ds1307.c: 157:  if(pRTCArray[2]&0x40)
  1277  0004B8  AC20               	btfss	(_pRTCArray+2)^0,6,c
  1278  0004BA  EF61  F002         	goto	u661
  1279  0004BE  EF63  F002         	goto	u660
  1280  0004C2                     u661:
  1281  0004C2  EF7F  F002         	goto	l284
  1282  0004C6                     u660:
  1283  0004C6                     
  1284                           ;ds1307.c: 158:  {;ds1307.c: 159:   if(pRTCArray[2]&0x20)
  1285  0004C6  AA20               	btfss	(_pRTCArray+2)^0,5,c
  1286  0004C8  EF68  F002         	goto	u671
  1287  0004CC  EF6A  F002         	goto	u670
  1288  0004D0                     u671:
  1289  0004D0  EF6E  F002         	goto	l1779
  1290  0004D4                     u670:
  1291  0004D4                     
  1292                           ;ds1307.c: 160:    pRTCArray[3] = 1;
  1293  0004D4  0E01               	movlw	1
  1294  0004D6  6E21               	movwf	(_pRTCArray+3)^0,c
  1295  0004D8  EF70  F002         	goto	l1781
  1296  0004DC                     l1779:
  1297                           
  1298                           ;ds1307.c: 162:    pRTCArray[3] = 0;
  1299  0004DC  0E00               	movlw	0
  1300  0004DE  6E21               	movwf	(_pRTCArray+3)^0,c
  1301  0004E0                     l1781:
  1302                           
  1303                           ;ds1307.c: 164:   Temp = pRTCArray[2];
  1304  0004E0  C020  F016         	movff	_pRTCArray+2,_Temp
  1305  0004E4                     
  1306                           ;ds1307.c: 165:   pRTCArray[2] = ((Temp&0x1F)>>4)*10 + (Temp&0x0F);
  1307  0004E4  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Time
  1308  0004E8  0E0F               	movlw	15
  1309  0004EA  162D               	andwf	??_Get_DS1307_RTC_Time^0,f,c
  1310  0004EC  3816               	swapf	_Temp^0,w,c
  1311  0004EE  0B0F               	andlw	15
  1312  0004F0  0B01               	andlw	1
  1313  0004F2  0D0A               	mullw	10
  1314  0004F4  50F3               	movf	243,w,c
  1315  0004F6  242D               	addwf	??_Get_DS1307_RTC_Time^0,w,c
  1316  0004F8  6E20               	movwf	(_pRTCArray+2)^0,c
  1317                           
  1318                           ;ds1307.c: 166:  }
  1319  0004FA  EF8D  F002         	goto	l1789
  1320  0004FE                     l284:
  1321                           
  1322                           ;ds1307.c: 168:  {;ds1307.c: 169:   Temp = pRTCArray[2];
  1323  0004FE  C020  F016         	movff	_pRTCArray+2,_Temp
  1324  000502                     
  1325                           ;ds1307.c: 170:   pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  1326  000502  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Time
  1327  000506  0E0F               	movlw	15
  1328  000508  162D               	andwf	??_Get_DS1307_RTC_Time^0,f,c
  1329  00050A  3816               	swapf	_Temp^0,w,c
  1330  00050C  0B0F               	andlw	15
  1331  00050E  0D0A               	mullw	10
  1332  000510  50F3               	movf	243,w,c
  1333  000512  242D               	addwf	??_Get_DS1307_RTC_Time^0,w,c
  1334  000514  6E20               	movwf	(_pRTCArray+2)^0,c
  1335  000516                     
  1336                           ;ds1307.c: 171:   pRTCArray[3] = 2;
  1337  000516  0E02               	movlw	2
  1338  000518  6E21               	movwf	(_pRTCArray+3)^0,c
  1339  00051A                     l1789:
  1340                           
  1341                           ;ds1307.c: 174:  return pRTCArray;
  1342  00051A  0E1E               	movlw	low _pRTCArray
  1343  00051C  6E2B               	movwf	?_Get_DS1307_RTC_Time^0,c
  1344  00051E  0E00               	movlw	high _pRTCArray
  1345  000520  6E2C               	movwf	(?_Get_DS1307_RTC_Time+1)^0,c
  1346  000522  0012               	return		;funcret
  1347  000524                     __end_of_Get_DS1307_RTC_Time:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _Get_DS1307_RTC_Date *****************
  1351 ;; Defined at:
  1352 ;;		line 207 in file "ds1307.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    9[COMRAM] PTR unsigned char 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1366 ;;      Params:         2       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0
  1368 ;;      Temps:          1       0       0       0       0       0       0
  1369 ;;      Totals:         3       0       0       0       0       0       0
  1370 ;;Total ram usage:        3 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 4
  1373 ;; This function calls:
  1374 ;;		_Read_Bytes_From_DS1307_RTC
  1375 ;; This function is called by:
  1376 ;;		_MCU_SetOutDisplay
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text8
  1381  000732                     __ptext8:
  1382                           	callstack 0
  1383  000732                     _Get_DS1307_RTC_Date:
  1384                           	callstack 24
  1385  000732                     
  1386                           ;ds1307.c: 210:  Read_Bytes_From_DS1307_RTC(0x03, pRTCArray, 4);
  1387  000732  0E1E               	movlw	low _pRTCArray
  1388  000734  6E24               	movwf	Read_Bytes_From_DS1307_RTC@pData^0,c
  1389  000736  0E00               	movlw	high _pRTCArray
  1390  000738  6E25               	movwf	(Read_Bytes_From_DS1307_RTC@pData+1)^0,c
  1391  00073A  0E00               	movlw	0
  1392  00073C  6E27               	movwf	(Read_Bytes_From_DS1307_RTC@NoOfBytes+1)^0,c
  1393  00073E  0E04               	movlw	4
  1394  000740  6E26               	movwf	Read_Bytes_From_DS1307_RTC@NoOfBytes^0,c
  1395  000742  0E03               	movlw	3
  1396  000744  ECEA  F002         	call	_Read_Bytes_From_DS1307_RTC
  1397  000748                     
  1398                           ;ds1307.c: 213:  Temp = pRTCArray[1];
  1399  000748  C01F  F016         	movff	_pRTCArray+1,_Temp
  1400  00074C                     
  1401                           ;ds1307.c: 214:  pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  1402  00074C  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Date
  1403  000750  0E0F               	movlw	15
  1404  000752  162D               	andwf	??_Get_DS1307_RTC_Date^0,f,c
  1405  000754  3816               	swapf	_Temp^0,w,c
  1406  000756  0B0F               	andlw	15
  1407  000758  0D0A               	mullw	10
  1408  00075A  50F3               	movf	243,w,c
  1409  00075C  242D               	addwf	??_Get_DS1307_RTC_Date^0,w,c
  1410  00075E  6E1F               	movwf	(_pRTCArray+1)^0,c
  1411  000760                     
  1412                           ;ds1307.c: 217:  Temp = pRTCArray[2];
  1413  000760  C020  F016         	movff	_pRTCArray+2,_Temp
  1414  000764                     
  1415                           ;ds1307.c: 218:  pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  1416  000764  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Date
  1417  000768  0E0F               	movlw	15
  1418  00076A  162D               	andwf	??_Get_DS1307_RTC_Date^0,f,c
  1419  00076C  3816               	swapf	_Temp^0,w,c
  1420  00076E  0B0F               	andlw	15
  1421  000770  0D0A               	mullw	10
  1422  000772  50F3               	movf	243,w,c
  1423  000774  242D               	addwf	??_Get_DS1307_RTC_Date^0,w,c
  1424  000776  6E20               	movwf	(_pRTCArray+2)^0,c
  1425  000778                     
  1426                           ;ds1307.c: 221:  Temp = pRTCArray[3];
  1427  000778  C021  F016         	movff	_pRTCArray+3,_Temp
  1428  00077C                     
  1429                           ;ds1307.c: 222:  pRTCArray[3] = (Temp>>4)*10 + (Temp&0x0F);
  1430  00077C  C016  F02D         	movff	_Temp,??_Get_DS1307_RTC_Date
  1431  000780  0E0F               	movlw	15
  1432  000782  162D               	andwf	??_Get_DS1307_RTC_Date^0,f,c
  1433  000784  3816               	swapf	_Temp^0,w,c
  1434  000786  0B0F               	andlw	15
  1435  000788  0D0A               	mullw	10
  1436  00078A  50F3               	movf	243,w,c
  1437  00078C  242D               	addwf	??_Get_DS1307_RTC_Date^0,w,c
  1438  00078E  6E21               	movwf	(_pRTCArray+3)^0,c
  1439  000790                     
  1440                           ;ds1307.c: 224:  return pRTCArray;
  1441  000790  0E1E               	movlw	low _pRTCArray
  1442  000792  6E2B               	movwf	?_Get_DS1307_RTC_Date^0,c
  1443  000794  0E00               	movlw	high _pRTCArray
  1444  000796  6E2C               	movwf	(?_Get_DS1307_RTC_Date+1)^0,c
  1445  000798  0012               	return		;funcret
  1446  00079A                     __end_of_Get_DS1307_RTC_Date:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _Read_Bytes_From_DS1307_RTC *****************
  1450 ;; Defined at:
  1451 ;;		line 78 in file "ds1307.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  Address         1    wreg     unsigned char 
  1454 ;;  pData           2    2[COMRAM] PTR unsigned char 
  1455 ;;		 -> pRTCArray(4), 
  1456 ;;  NoOfBytes       2    4[COMRAM] unsigned int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  Address         1    6[COMRAM] unsigned char 
  1459 ;;  i               2    7[COMRAM] unsigned int 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1469 ;;      Params:         4       0       0       0       0       0       0
  1470 ;;      Locals:         3       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0
  1472 ;;      Totals:         7       0       0       0       0       0       0
  1473 ;;Total ram usage:        7 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 3
  1476 ;; This function calls:
  1477 ;;		_I2C1_ReStart
  1478 ;;		_I2C1_Read
  1479 ;;		_I2C1_Send
  1480 ;;		_I2C1_Send_ACK
  1481 ;;		_I2C1_Send_NACK
  1482 ;;		_I2C1_Start
  1483 ;;		_I2C1_Stop
  1484 ;; This function is called by:
  1485 ;;		_Get_DS1307_RTC_Time
  1486 ;;		_Get_DS1307_RTC_Date
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text9
  1491  0005D4                     __ptext9:
  1492                           	callstack 0
  1493  0005D4                     _Read_Bytes_From_DS1307_RTC:
  1494                           	callstack 24
  1495                           
  1496                           ;incstack = 0
  1497                           ;Read_Bytes_From_DS1307_RTC@Address stored from wreg
  1498  0005D4  6E28               	movwf	Read_Bytes_From_DS1307_RTC@Address^0,c
  1499  0005D6                     l1657:
  1500                           
  1501                           ;ds1307.c: 78: void Read_Bytes_From_DS1307_RTC(unsigned char Address, unsigned char* pDa
      +                          ta, unsigned int NoOfBytes);ds1307.c: 79: {;ds1307.c: 80:  unsigned int i;;ds1307.c: 82:
      +                            I2C1_Start();
  1502  0005D6  ECE7  F004         	call	_I2C1_Start	;wreg free
  1503  0005DA                     
  1504                           ;ds1307.c: 85:  while(I2C1_Send(0xD0 + 0) == 1)
  1505  0005DA  0ED0               	movlw	208
  1506  0005DC  EC62  F004         	call	_I2C1_Send
  1507  0005E0  06E8               	decf	wreg,f,c
  1508  0005E2  B4D8               	btfsc	status,2,c
  1509  0005E4  EFF6  F002         	goto	u521
  1510  0005E8  EFF8  F002         	goto	u520
  1511  0005EC                     u521:
  1512  0005EC  EFEB  F002         	goto	l1657
  1513  0005F0                     u520:
  1514  0005F0                     
  1515                           ;ds1307.c: 88:  I2C1_Send(Address);
  1516  0005F0  5028               	movf	Read_Bytes_From_DS1307_RTC@Address^0,w,c
  1517  0005F2  EC62  F004         	call	_I2C1_Send
  1518  0005F6                     
  1519                           ;ds1307.c: 89:  I2C1_ReStart();
  1520  0005F6  ECF1  F004         	call	_I2C1_ReStart	;wreg free
  1521  0005FA                     
  1522                           ;ds1307.c: 92:  I2C1_Send(0xD0 + 1);
  1523  0005FA  0ED1               	movlw	209
  1524  0005FC  EC62  F004         	call	_I2C1_Send
  1525  000600                     
  1526                           ;ds1307.c: 94:  pData[0] = I2C1_Read();
  1527  000600  ECD2  F004         	call	_I2C1_Read	;wreg free
  1528  000604  C024  FFD9         	movff	Read_Bytes_From_DS1307_RTC@pData,fsr2l
  1529  000608  C025  FFDA         	movff	Read_Bytes_From_DS1307_RTC@pData+1,fsr2h
  1530  00060C  6EDF               	movwf	indf2,c
  1531  00060E                     
  1532                           ;ds1307.c: 96:  for(i=1;i<NoOfBytes;i++)
  1533  00060E  0E00               	movlw	0
  1534  000610  6E2A               	movwf	(Read_Bytes_From_DS1307_RTC@i+1)^0,c
  1535  000612  0E01               	movlw	1
  1536  000614  6E29               	movwf	Read_Bytes_From_DS1307_RTC@i^0,c
  1537  000616  EF1A  F003         	goto	l1679
  1538  00061A                     l1673:
  1539                           
  1540                           ;ds1307.c: 97:  {;ds1307.c: 98:   I2C1_Send_ACK();
  1541  00061A  ECC7  F004         	call	_I2C1_Send_ACK	;wreg free
  1542  00061E                     
  1543                           ;ds1307.c: 99:   pData[i] = I2C1_Read();
  1544  00061E  5029               	movf	Read_Bytes_From_DS1307_RTC@i^0,w,c
  1545  000620  2424               	addwf	Read_Bytes_From_DS1307_RTC@pData^0,w,c
  1546  000622  6ED9               	movwf	fsr2l,c
  1547  000624  502A               	movf	(Read_Bytes_From_DS1307_RTC@i+1)^0,w,c
  1548  000626  2025               	addwfc	(Read_Bytes_From_DS1307_RTC@pData+1)^0,w,c
  1549  000628  6EDA               	movwf	fsr2h,c
  1550  00062A  ECD2  F004         	call	_I2C1_Read	;wreg free
  1551  00062E  6EDF               	movwf	indf2,c
  1552  000630                     
  1553                           ;ds1307.c: 100:  }
  1554  000630  4A29               	infsnz	Read_Bytes_From_DS1307_RTC@i^0,f,c
  1555  000632  2A2A               	incf	(Read_Bytes_From_DS1307_RTC@i+1)^0,f,c
  1556  000634                     l1679:
  1557  000634  5026               	movf	Read_Bytes_From_DS1307_RTC@NoOfBytes^0,w,c
  1558  000636  5C29               	subwf	Read_Bytes_From_DS1307_RTC@i^0,w,c
  1559  000638  5027               	movf	(Read_Bytes_From_DS1307_RTC@NoOfBytes+1)^0,w,c
  1560  00063A  582A               	subwfb	(Read_Bytes_From_DS1307_RTC@i+1)^0,w,c
  1561  00063C  A0D8               	btfss	status,0,c
  1562  00063E  EF23  F003         	goto	u531
  1563  000642  EF25  F003         	goto	u530
  1564  000646                     u531:
  1565  000646  EF0D  F003         	goto	l1673
  1566  00064A                     u530:
  1567  00064A                     
  1568                           ;ds1307.c: 102:  I2C1_Send_NACK();
  1569  00064A  ECBC  F004         	call	_I2C1_Send_NACK	;wreg free
  1570                           
  1571                           ;ds1307.c: 103:  I2C1_Stop();
  1572  00064E  ECDD  F004         	call	_I2C1_Stop	;wreg free
  1573  000652  0012               	return		;funcret
  1574  000654                     __end_of_Read_Bytes_From_DS1307_RTC:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _I2C1_Stop *****************
  1578 ;; Defined at:
  1579 ;;		line 158 in file "i2c.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		None
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 2
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_Read_Bytes_From_DS1307_RTC
  1604 ;;		_Write_Byte_To_DS1307_RTC
  1605 ;;		_Read_Byte_From_DS1307_RTC
  1606 ;;		_Write_Bytes_To_DS1307_RTC
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text10
  1611  0009BA                     __ptext10:
  1612                           	callstack 0
  1613  0009BA                     _I2C1_Stop:
  1614                           	callstack 24
  1615  0009BA                     
  1616                           ;i2c.c: 159:     SSP1CON2bits.PEN = 1;
  1617  0009BA  84C5               	bsf	197,2,c	;volatile
  1618  0009BC                     l367:
  1619  0009BC  A69E               	btfss	158,3,c	;volatile
  1620  0009BE  EFE3  F004         	goto	u81
  1621  0009C2  EFE5  F004         	goto	u80
  1622  0009C6                     u81:
  1623  0009C6  EFDE  F004         	goto	l367
  1624  0009CA                     u80:
  1625  0009CA                     
  1626                           ;i2c.c: 161:  PIR1bits.SSP1IF = 0;
  1627  0009CA  969E               	bcf	158,3,c	;volatile
  1628  0009CC  0012               	return		;funcret
  1629  0009CE                     __end_of_I2C1_Stop:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _I2C1_Start *****************
  1633 ;; Defined at:
  1634 ;;		line 102 in file "i2c.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		None
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1648 ;;      Params:         0       0       0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 2
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_Read_Bytes_From_DS1307_RTC
  1659 ;;		_Write_Byte_To_DS1307_RTC
  1660 ;;		_Read_Byte_From_DS1307_RTC
  1661 ;;		_Write_Bytes_To_DS1307_RTC
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text11
  1666  0009CE                     __ptext11:
  1667                           	callstack 0
  1668  0009CE                     _I2C1_Start:
  1669                           	callstack 24
  1670  0009CE                     
  1671                           ;i2c.c: 103:     SSP1CON2bits.SEN = 1 ;
  1672  0009CE  80C5               	bsf	197,0,c	;volatile
  1673  0009D0                     l343:
  1674  0009D0  A69E               	btfss	158,3,c	;volatile
  1675  0009D2  EFED  F004         	goto	u51
  1676  0009D6  EFEF  F004         	goto	u50
  1677  0009DA                     u51:
  1678  0009DA  EFE8  F004         	goto	l343
  1679  0009DE                     u50:
  1680  0009DE                     
  1681                           ;i2c.c: 105:  PIR1bits.SSP1IF = 0 ;
  1682  0009DE  969E               	bcf	158,3,c	;volatile
  1683  0009E0  0012               	return		;funcret
  1684  0009E2                     __end_of_I2C1_Start:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _I2C1_Send_NACK *****************
  1688 ;; Defined at:
  1689 ;;		line 216 in file "i2c.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		None
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1703 ;;      Params:         0       0       0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 2
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_Read_Bytes_From_DS1307_RTC
  1714 ;;		_Read_Byte_From_DS1307_RTC
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text12
  1719  000978                     __ptext12:
  1720                           	callstack 0
  1721  000978                     _I2C1_Send_NACK:
  1722                           	callstack 24
  1723  000978                     
  1724                           ;i2c.c: 217:     SSP1CON2bits.ACKDT = 1;
  1725  000978  8AC5               	bsf	197,5,c	;volatile
  1726                           
  1727                           ;i2c.c: 218:  SSP1CON2bits.ACKEN = 1;
  1728  00097A  88C5               	bsf	197,4,c	;volatile
  1729  00097C                     l391:
  1730  00097C  A69E               	btfss	158,3,c	;volatile
  1731  00097E  EFC3  F004         	goto	u111
  1732  000982  EFC5  F004         	goto	u110
  1733  000986                     u111:
  1734  000986  EFBE  F004         	goto	l391
  1735  00098A                     u110:
  1736  00098A                     
  1737                           ;i2c.c: 220:  PIR1bits.SSP1IF = 0;
  1738  00098A  969E               	bcf	158,3,c	;volatile
  1739  00098C  0012               	return		;funcret
  1740  00098E                     __end_of_I2C1_Send_NACK:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _I2C1_Send_ACK *****************
  1744 ;; Defined at:
  1745 ;;		line 186 in file "i2c.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		None
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         0       0       0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 2
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_Read_Bytes_From_DS1307_RTC
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text13
  1774  00098E                     __ptext13:
  1775                           	callstack 0
  1776  00098E                     _I2C1_Send_ACK:
  1777                           	callstack 24
  1778  00098E                     
  1779                           ;i2c.c: 187:     SSP1CON2bits.ACKDT = 0;
  1780  00098E  9AC5               	bcf	197,5,c	;volatile
  1781                           
  1782                           ;i2c.c: 188:  SSP1CON2bits.ACKEN = 1;
  1783  000990  88C5               	bsf	197,4,c	;volatile
  1784  000992                     l379:
  1785  000992  A69E               	btfss	158,3,c	;volatile
  1786  000994  EFCE  F004         	goto	u121
  1787  000998  EFD0  F004         	goto	u120
  1788  00099C                     u121:
  1789  00099C  EFC9  F004         	goto	l379
  1790  0009A0                     u120:
  1791  0009A0                     
  1792                           ;i2c.c: 190:  PIR1bits.SSP1IF = 0;
  1793  0009A0  969E               	bcf	158,3,c	;volatile
  1794  0009A2  0012               	return		;funcret
  1795  0009A4                     __end_of_I2C1_Send_ACK:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _I2C1_Send *****************
  1799 ;; Defined at:
  1800 ;;		line 246 in file "i2c.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  BYTE            1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  BYTE            1    1[COMRAM] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      unsigned char 
  1807 ;; Registers used:
  1808 ;;		wreg
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1814 ;;      Params:         0       0       0       0       0       0       0
  1815 ;;      Locals:         1       0       0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0
  1817 ;;      Totals:         1       0       0       0       0       0       0
  1818 ;;Total ram usage:        1 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 2
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_Read_Bytes_From_DS1307_RTC
  1825 ;;		_Write_Byte_To_DS1307_RTC
  1826 ;;		_Read_Byte_From_DS1307_RTC
  1827 ;;		_Write_Bytes_To_DS1307_RTC
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text14
  1832  0008C4                     __ptext14:
  1833                           	callstack 0
  1834  0008C4                     _I2C1_Send:
  1835                           	callstack 24
  1836                           
  1837                           ;incstack = 0
  1838                           ;I2C1_Send@BYTE stored from wreg
  1839  0008C4  6E23               	movwf	I2C1_Send@BYTE^0,c
  1840  0008C6                     
  1841                           ;i2c.c: 247:     SSP1BUF = BYTE;
  1842  0008C6  C023  FFC9         	movff	I2C1_Send@BYTE,4041	;volatile
  1843  0008CA                     l403:
  1844  0008CA  A69E               	btfss	158,3,c	;volatile
  1845  0008CC  EF6A  F004         	goto	u61
  1846  0008D0  EF6C  F004         	goto	u60
  1847  0008D4                     u61:
  1848  0008D4  EF65  F004         	goto	l403
  1849  0008D8                     u60:
  1850  0008D8                     
  1851                           ;i2c.c: 249:         PIR1bits.SSP1IF = 0;
  1852  0008D8  969E               	bcf	158,3,c	;volatile
  1853                           
  1854                           ;i2c.c: 250:  return SSP1CON2bits.ACKSTAT;
  1855  0008DA  BCC5               	btfsc	197,6,c	;volatile
  1856  0008DC  EF72  F004         	goto	u71
  1857  0008E0  EF75  F004         	goto	u70
  1858  0008E4                     u71:
  1859  0008E4  0E01               	movlw	1
  1860  0008E6  EF76  F004         	goto	u76
  1861  0008EA                     u70:
  1862  0008EA  0E00               	movlw	0
  1863  0008EC                     u76:
  1864  0008EC  0012               	return		;funcret
  1865  0008EE                     __end_of_I2C1_Send:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _I2C1_Read *****************
  1869 ;; Defined at:
  1870 ;;		line 276 in file "i2c.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      unsigned char 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1884 ;;      Params:         0       0       0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 2
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_Read_Bytes_From_DS1307_RTC
  1895 ;;		_Read_Byte_From_DS1307_RTC
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text15
  1900  0009A4                     __ptext15:
  1901                           	callstack 0
  1902  0009A4                     _I2C1_Read:
  1903                           	callstack 24
  1904  0009A4                     
  1905                           ;i2c.c: 277:     SSP1CON2bits.RCEN = 1;
  1906  0009A4  86C5               	bsf	197,3,c	;volatile
  1907  0009A6                     l415:
  1908  0009A6  A69E               	btfss	158,3,c	;volatile
  1909  0009A8  EFD8  F004         	goto	u101
  1910  0009AC  EFDA  F004         	goto	u100
  1911  0009B0                     u101:
  1912  0009B0  EFD3  F004         	goto	l415
  1913  0009B4                     u100:
  1914  0009B4                     
  1915                           ;i2c.c: 279:  PIR1bits.SSP1IF = 0;
  1916  0009B4  969E               	bcf	158,3,c	;volatile
  1917  0009B6                     
  1918                           ;i2c.c: 280:     return SSP1BUF;
  1919  0009B6  50C9               	movf	201,w,c	;volatile
  1920  0009B8  0012               	return		;funcret
  1921  0009BA                     __end_of_I2C1_Read:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function _I2C1_ReStart *****************
  1925 ;; Defined at:
  1926 ;;		line 130 in file "i2c.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		None
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1940 ;;      Params:         0       0       0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0
  1943 ;;      Totals:         0       0       0       0       0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 2
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_Read_Bytes_From_DS1307_RTC
  1951 ;;		_Read_Byte_From_DS1307_RTC
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text16
  1956  0009E2                     __ptext16:
  1957                           	callstack 0
  1958  0009E2                     _I2C1_ReStart:
  1959                           	callstack 24
  1960  0009E2                     
  1961                           ;i2c.c: 131:     SSP1CON2bits.RSEN = 1;
  1962  0009E2  82C5               	bsf	197,1,c	;volatile
  1963  0009E4                     l355:
  1964  0009E4  A69E               	btfss	158,3,c	;volatile
  1965  0009E6  EFF7  F004         	goto	u91
  1966  0009EA  EFF9  F004         	goto	u90
  1967  0009EE                     u91:
  1968  0009EE  EFF2  F004         	goto	l355
  1969  0009F2                     u90:
  1970  0009F2                     
  1971                           ;i2c.c: 133:  PIR1bits.SSP1IF = 0;
  1972  0009F2  969E               	bcf	158,3,c	;volatile
  1973  0009F4  0012               	return		;funcret
  1974  0009F6                     __end_of_I2C1_ReStart:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _MCU_SetModeDisplay *****************
  1978 ;; Defined at:
  1979 ;;		line 118 in file "mcu.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1993 ;;      Params:         0       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0
  1995 ;;      Temps:          2       0       0       0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_SYSTEM_Process
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text17
  2008  0006C6                     __ptext17:
  2009                           	callstack 0
  2010  0006C6                     _MCU_SetModeDisplay:
  2011                           	callstack 27
  2012  0006C6                     
  2013                           ;mcu.c: 119:     mSeconds++;
  2014  0006C6  2A19               	incf	_mSeconds^0,f,c
  2015  0006C8                     
  2016                           ;mcu.c: 120:     if(mSeconds>9){
  2017  0006C8  0E09               	movlw	9
  2018  0006CA  6419               	cpfsgt	_mSeconds^0,c
  2019  0006CC  EF6A  F003         	goto	u301
  2020  0006D0  EF6C  F003         	goto	u300
  2021  0006D4                     u301:
  2022  0006D4  EF98  F003         	goto	l210
  2023  0006D8                     u300:
  2024  0006D8                     
  2025                           ;mcu.c: 121:         mSeconds = 0;
  2026  0006D8  0E00               	movlw	0
  2027  0006DA  6E19               	movwf	_mSeconds^0,c
  2028  0006DC                     
  2029                           ;mcu.c: 122:         Seconds ++;
  2030  0006DC  2A18               	incf	_Seconds^0,f,c
  2031  0006DE                     
  2032                           ;mcu.c: 123:         if(Seconds >59)
  2033  0006DE  0E3B               	movlw	59
  2034  0006E0  6418               	cpfsgt	_Seconds^0,c
  2035  0006E2  EF75  F003         	goto	u311
  2036  0006E6  EF77  F003         	goto	u310
  2037  0006EA                     u311:
  2038  0006EA  EF83  F003         	goto	l1401
  2039  0006EE                     u310:
  2040  0006EE                     
  2041                           ;mcu.c: 124:             Seconds = 0;
  2042  0006EE  0E00               	movlw	0
  2043  0006F0  6E18               	movwf	_Seconds^0,c
  2044  0006F2  EF83  F003         	goto	l1401
  2045  0006F6                     l1395:
  2046                           
  2047                           ;mcu.c: 127:                 displayMode = showTime;
  2048  0006F6  0E00               	movlw	0
  2049  0006F8  6E1D               	movwf	_displayMode^0,c
  2050                           
  2051                           ;mcu.c: 128:                 break;
  2052  0006FA  EF98  F003         	goto	l210
  2053  0006FE                     l1397:
  2054                           
  2055                           ;mcu.c: 130:                 displayMode = showDate;
  2056  0006FE  0E01               	movlw	1
  2057  000700  6E1D               	movwf	_displayMode^0,c
  2058                           
  2059                           ;mcu.c: 131:                 break;
  2060  000702  EF98  F003         	goto	l210
  2061  000706                     l1401:
  2062  000706  5018               	movf	_Seconds^0,w,c
  2063  000708  6E23               	movwf	??_MCU_SetModeDisplay^0,c
  2064  00070A  6A24               	clrf	(??_MCU_SetModeDisplay+1)^0,c
  2065                           
  2066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2067                           ; Switch size 1, requested type "simple"
  2068                           ; Number of cases is 1, Range of values is 0 to 0
  2069                           ; switch strategies available:
  2070                           ; Name         Instructions Cycles
  2071                           ; simple_byte            4     3 (average)
  2072                           ;	Chosen strategy is simple_byte
  2073  00070C  5024               	movf	(??_MCU_SetModeDisplay+1)^0,w,c
  2074  00070E  0A00               	xorlw	0	; case 0
  2075  000710  B4D8               	btfsc	status,2,c
  2076  000712  EF8D  F003         	goto	l1967
  2077  000716  EF98  F003         	goto	l210
  2078  00071A                     l1967:
  2079                           
  2080                           ; Switch size 1, requested type "simple"
  2081                           ; Number of cases is 2, Range of values is 0 to 49
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte            7     4 (average)
  2085                           ;	Chosen strategy is simple_byte
  2086  00071A  5023               	movf	??_MCU_SetModeDisplay^0,w,c
  2087  00071C  0A00               	xorlw	0	; case 0
  2088  00071E  B4D8               	btfsc	status,2,c
  2089  000720  EF7B  F003         	goto	l1395
  2090  000724  0A31               	xorlw	49	; case 49
  2091  000726  B4D8               	btfsc	status,2,c
  2092  000728  EF7F  F003         	goto	l1397
  2093  00072C  EF98  F003         	goto	l210
  2094  000730                     l210:
  2095  000730  0012               	return		;funcret
  2096  000732                     __end_of_MCU_SetModeDisplay:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _SYSTEM_Initialize *****************
  2100 ;; Defined at:
  2101 ;;		line 25 in file "mcu.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         0       0       0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0
  2117 ;;      Temps:          1       0       0       0       0       0       0
  2118 ;;      Totals:         1       0       0       0       0       0       0
  2119 ;;Total ram usage:        1 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 6
  2122 ;; This function calls:
  2123 ;;		_DISPLAY_Reset
  2124 ;;		_I2C1_Init
  2125 ;;		_ISR_Initialize
  2126 ;;		_MCU_Initialize
  2127 ;;		_OSCILLATOR_Initialize
  2128 ;;		_TMR0_Initialize
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text18
  2135  0008EE                     __ptext18:
  2136                           	callstack 0
  2137  0008EE                     _SYSTEM_Initialize:
  2138                           	callstack 24
  2139  0008EE                     
  2140                           ;mcu.c: 26:     MCU_Initialize();
  2141  0008EE  EC8B  F004         	call	_MCU_Initialize	;wreg free
  2142                           
  2143                           ;mcu.c: 27:     OSCILLATOR_Initialize();
  2144  0008F2  EC19  F005         	call	_OSCILLATOR_Initialize	;wreg free
  2145                           
  2146                           ;mcu.c: 28:     TMR0_Initialize();
  2147  0008F6  EC9F  F004         	call	_TMR0_Initialize	;wreg free
  2148                           
  2149                           ;mcu.c: 29:     I2C1_Init();
  2150  0008FA  EC04  F005         	call	_I2C1_Init	;wreg free
  2151  0008FE                     
  2152                           ;mcu.c: 30:     DISPLAY_Reset();
  2153  0008FE  ECAE  F004         	call	_DISPLAY_Reset	;wreg free
  2154  000902                     
  2155                           ;mcu.c: 31:     _delay((unsigned long)((10)*(16000000/4000.0)));
  2156  000902  0E34               	movlw	52
  2157  000904  6E31               	movwf	??_SYSTEM_Initialize^0,c
  2158  000906  0EF2               	movlw	242
  2159  000908                     u747:
  2160  000908  2EE8               	decfsz	wreg,f,c
  2161  00090A  D7FE               	bra	u747
  2162  00090C  2E31               	decfsz	??_SYSTEM_Initialize^0,f,c
  2163  00090E  D7FC               	bra	u747
  2164  000910                     
  2165                           ;mcu.c: 33:     ISR_Initialize();
  2166  000910  EC15  F005         	call	_ISR_Initialize	;wreg free
  2167  000914  0012               	return		;funcret
  2168  000916                     __end_of_SYSTEM_Initialize:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _TMR0_Initialize *****************
  2172 ;; Defined at:
  2173 ;;		line 95 in file "mcu.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2187 ;;      Params:         0       0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 2
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_SYSTEM_Initialize
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text19
  2202  00093E                     __ptext19:
  2203                           	callstack 0
  2204  00093E                     _TMR0_Initialize:
  2205                           	callstack 27
  2206  00093E                     
  2207                           ;mcu.c: 97:     T0CONbits.TMR0ON = 1;
  2208  00093E  8ED5               	bsf	213,7,c	;volatile
  2209                           
  2210                           ;mcu.c: 98:     T0CONbits.T08BIT = 0;
  2211  000940  9CD5               	bcf	213,6,c	;volatile
  2212                           
  2213                           ;mcu.c: 99:     T0CONbits.T0CS = 0;
  2214  000942  9AD5               	bcf	213,5,c	;volatile
  2215                           
  2216                           ;mcu.c: 100:     T0CONbits.T0SE = 0;
  2217  000944  98D5               	bcf	213,4,c	;volatile
  2218                           
  2219                           ;mcu.c: 101:     T0CONbits.PSA = 0;
  2220  000946  96D5               	bcf	213,3,c	;volatile
  2221  000948                     
  2222                           ;mcu.c: 102:     T0CONbits.T0PS = 0b000;
  2223  000948  0EF8               	movlw	-8
  2224  00094A  16D5               	andwf	213,f,c	;volatile
  2225                           
  2226                           ;mcu.c: 105:     ((void)(TMR0H=((0xF830)>>8),TMR0L=((0xF830)&0xFF)));
  2227  00094C  0EF8               	movlw	248
  2228  00094E  6ED7               	movwf	215,c	;volatile
  2229  000950  0E30               	movlw	48
  2230  000952  6ED6               	movwf	214,c	;volatile
  2231  000954                     
  2232                           ;mcu.c: 106:     INTCONbits.TMR0IF = 0;
  2233  000954  94F2               	bcf	242,2,c	;volatile
  2234  000956                     
  2235                           ;mcu.c: 107:     INTCONbits.TMR0IE = 1;
  2236  000956  8AF2               	bsf	242,5,c	;volatile
  2237  000958                     
  2238                           ;mcu.c: 108:     INTCON2bits.TMR0IP = 1;
  2239  000958  84F1               	bsf	241,2,c	;volatile
  2240  00095A  0012               	return		;funcret
  2241  00095C                     __end_of_TMR0_Initialize:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _OSCILLATOR_Initialize *****************
  2245 ;; Defined at:
  2246 ;;		line 90 in file "mcu.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2260 ;;      Params:         0       0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_SYSTEM_Initialize
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text20
  2275  000A32                     __ptext20:
  2276                           	callstack 0
  2277  000A32                     _OSCILLATOR_Initialize:
  2278                           	callstack 27
  2279  000A32                     
  2280                           ;mcu.c: 92:     OSCCONbits.IRCF=0b111;
  2281  000A32  0E70               	movlw	112
  2282  000A34  12D3               	iorwf	211,f,c	;volatile
  2283  000A36  0012               	return		;funcret
  2284  000A38                     __end_of_OSCILLATOR_Initialize:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _MCU_Initialize *****************
  2288 ;; Defined at:
  2289 ;;		line 64 in file "mcu.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2303 ;;      Params:         0       0       0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0
  2306 ;;      Totals:         0       0       0       0       0       0       0
  2307 ;;Total ram usage:        0 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 2
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_SYSTEM_Initialize
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text21
  2318  000916                     __ptext21:
  2319                           	callstack 0
  2320  000916                     _MCU_Initialize:
  2321                           	callstack 27
  2322  000916                     
  2323                           ;mcu.c: 66:     ANSELA = 0;
  2324  000916  0E00               	movlw	0
  2325  000918  010F               	movlb	15	; () banked
  2326  00091A  6F38               	movwf	56,b	;volatile
  2327                           
  2328                           ;mcu.c: 67:     ANSELB = 0;
  2329  00091C  0E00               	movlw	0
  2330  00091E  6F39               	movwf	57,b	;volatile
  2331                           
  2332                           ;mcu.c: 68:     ANSELC = 0;
  2333  000920  0E00               	movlw	0
  2334  000922  6F3A               	movwf	58,b	;volatile
  2335                           
  2336                           ;mcu.c: 71:     TRISA = 0x00;
  2337  000924  0E00               	movlw	0
  2338  000926  6E92               	movwf	146,c	;volatile
  2339                           
  2340                           ;mcu.c: 72:     TRISB = 0x00;
  2341  000928  0E00               	movlw	0
  2342  00092A  6E93               	movwf	147,c	;volatile
  2343                           
  2344                           ;mcu.c: 73:     TRISC = 0x00;
  2345  00092C  0E00               	movlw	0
  2346  00092E  6E94               	movwf	148,c	;volatile
  2347                           
  2348                           ;mcu.c: 76:     PORTA = 0x00;
  2349  000930  0E00               	movlw	0
  2350  000932  6E80               	movwf	128,c	;volatile
  2351                           
  2352                           ;mcu.c: 77:     PORTB = 0x00;
  2353  000934  0E00               	movlw	0
  2354  000936  6E81               	movwf	129,c	;volatile
  2355                           
  2356                           ;mcu.c: 78:     PORTC = 0x00;
  2357  000938  0E00               	movlw	0
  2358  00093A  6E82               	movwf	130,c	;volatile
  2359  00093C                     
  2360                           ; BSR set to: 15
  2361  00093C  0012               	return		;funcret
  2362  00093E                     __end_of_MCU_Initialize:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _ISR_Initialize *****************
  2366 ;; Defined at:
  2367 ;;		line 19 in file "isr_manager.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		None
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2381 ;;      Params:         0       0       0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 2
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_SYSTEM_Initialize
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text22
  2396  000A2A                     __ptext22:
  2397                           	callstack 0
  2398  000A2A                     _ISR_Initialize:
  2399                           	callstack 27
  2400  000A2A                     
  2401                           ;isr_manager.c: 20:     RCONbits.IPEN=1;
  2402  000A2A  8ED0               	bsf	208,7,c	;volatile
  2403                           
  2404                           ;isr_manager.c: 21:     INTCONbits.GIEL=1;
  2405  000A2C  8CF2               	bsf	242,6,c	;volatile
  2406                           
  2407                           ;isr_manager.c: 22:     INTCONbits.GIEH=1;
  2408  000A2E  8EF2               	bsf	242,7,c	;volatile
  2409  000A30  0012               	return		;funcret
  2410  000A32                     __end_of_ISR_Initialize:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _I2C1_Init *****************
  2414 ;; Defined at:
  2415 ;;		line 54 in file "i2c.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2429 ;;      Params:         0       0       0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 2
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_SYSTEM_Initialize
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text23
  2444  000A08                     __ptext23:
  2445                           	callstack 0
  2446  000A08                     _I2C1_Init:
  2447                           	callstack 27
  2448  000A08                     
  2449                           ;i2c.c: 55:     TRISCbits.RC4 = 1 ;
  2450  000A08  8894               	bsf	148,4,c	;volatile
  2451                           
  2452                           ;i2c.c: 56:  TRISCbits.RC3 = 1 ;
  2453  000A0A  8694               	bsf	148,3,c	;volatile
  2454  000A0C                     
  2455                           ;i2c.c: 57:     SSP1STAT = 0b10000000;
  2456  000A0C  0E80               	movlw	128
  2457  000A0E  6EC7               	movwf	199,c	;volatile
  2458                           
  2459                           ;i2c.c: 66:  SSP1CON1 = 0b00101000;
  2460  000A10  0E28               	movlw	40
  2461  000A12  6EC6               	movwf	198,c	;volatile
  2462                           
  2463                           ;i2c.c: 67:     SSP1ADD = ((16000000/4000)/100) - 1;
  2464  000A14  0E27               	movlw	39
  2465  000A16  6EC8               	movwf	200,c	;volatile
  2466  000A18  0012               	return		;funcret
  2467  000A1A                     __end_of_I2C1_Init:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _DISPLAY_Reset *****************
  2471 ;; Defined at:
  2472 ;;		line 79 in file "Display7seg_74HC595.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2486 ;;      Params:         0       0       0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0
  2489 ;;      Totals:         0       0       0       0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 5
  2493 ;; This function calls:
  2494 ;;		_DISPLAY_Set
  2495 ;; This function is called by:
  2496 ;;		_SYSTEM_Initialize
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text24
  2501  00095C                     __ptext24:
  2502                           	callstack 0
  2503  00095C                     _DISPLAY_Reset:
  2504                           	callstack 24
  2505  00095C                     
  2506                           ;Display7seg_74HC595.c: 80:     DISPLAY_Set(16, 16, 16, 16, 16, 16);
  2507  00095C  0E10               	movlw	16
  2508  00095E  6E29               	movwf	DISPLAY_Set@D2^0,c
  2509  000960  0E10               	movlw	16
  2510  000962  6E2A               	movwf	DISPLAY_Set@D3^0,c
  2511  000964  0E10               	movlw	16
  2512  000966  6E2B               	movwf	DISPLAY_Set@D4^0,c
  2513  000968  0E10               	movlw	16
  2514  00096A  6E2C               	movwf	DISPLAY_Set@D5^0,c
  2515  00096C  0E10               	movlw	16
  2516  00096E  6E2D               	movwf	DISPLAY_Set@D6^0,c
  2517  000970  0E10               	movlw	16
  2518  000972  EC15  F000         	call	_DISPLAY_Set
  2519  000976  0012               	return		;funcret
  2520  000978                     __end_of_DISPLAY_Reset:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _DISPLAY_Set *****************
  2524 ;; Defined at:
  2525 ;;		line 34 in file "Display7seg_74HC595.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  D1              1    wreg     unsigned char 
  2528 ;;  D2              1    7[COMRAM] unsigned char 
  2529 ;;  D3              1    8[COMRAM] unsigned char 
  2530 ;;  D4              1    9[COMRAM] unsigned char 
  2531 ;;  D5              1   10[COMRAM] unsigned char 
  2532 ;;  D6              1   11[COMRAM] unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  D1              1   14[COMRAM] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2544 ;;      Params:         5       0       0       0       0       0       0
  2545 ;;      Locals:         1       0       0       0       0       0       0
  2546 ;;      Temps:          2       0       0       0       0       0       0
  2547 ;;      Totals:         8       0       0       0       0       0       0
  2548 ;;Total ram usage:        8 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 4
  2551 ;; This function calls:
  2552 ;;		_DISPLAY_Update
  2553 ;; This function is called by:
  2554 ;;		_DISPLAY_Reset
  2555 ;;		_UpdateTimeToDisplay
  2556 ;;		_UpdateDateToDisplay
  2557 ;;		_DISPLAY_Write
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text25
  2562  00002A                     __ptext25:
  2563                           	callstack 0
  2564  00002A                     _DISPLAY_Set:
  2565                           	callstack 23
  2566                           
  2567                           ;incstack = 0
  2568                           ;DISPLAY_Set@D1 stored from wreg
  2569  00002A  6E30               	movwf	DISPLAY_Set@D1^0,c
  2570  00002C                     
  2571                           ;Display7seg_74HC595.c: 36:     switch (displayMode){
  2572  00002C  EFC2  F000         	goto	l1649
  2573  000030                     l1639:
  2574                           
  2575                           ;Display7seg_74HC595.c: 38:             if(dotsEnable){
  2576  000030  501C               	movf	_dotsEnable^0,w,c
  2577  000032  B4D8               	btfsc	status,2,c
  2578  000034  EF1E  F000         	goto	u511
  2579  000038  EF20  F000         	goto	u510
  2580  00003C                     u511:
  2581  00003C  EF58  F000         	goto	l1643
  2582  000040                     u510:
  2583  000040                     
  2584                           ;Display7seg_74HC595.c: 39:                 display_values[5] = digits[D1];
  2585  000040  0E36               	movlw	low _digits
  2586  000042  2430               	addwf	DISPLAY_Set@D1^0,w,c
  2587  000044  6ED9               	movwf	fsr2l,c
  2588  000046  6ADA               	clrf	fsr2h,c
  2589  000048  0E00               	movlw	high _digits
  2590  00004A  22DA               	addwfc	fsr2h,f,c
  2591  00004C  50DF               	movf	indf2,w,c
  2592  00004E  6E14               	movwf	(_display_values+5)^0,c
  2593                           
  2594                           ;Display7seg_74HC595.c: 40:                 display_values[4] = (digits[D2])&((uint8_t)~
      +                          0b00100000);
  2595  000050  0E36               	movlw	low _digits
  2596  000052  2429               	addwf	DISPLAY_Set@D2^0,w,c
  2597  000054  6ED9               	movwf	fsr2l,c
  2598  000056  6ADA               	clrf	fsr2h,c
  2599  000058  0E00               	movlw	high _digits
  2600  00005A  22DA               	addwfc	fsr2h,f,c
  2601  00005C  50DF               	movf	indf2,w,c
  2602  00005E  0BDF               	andlw	223
  2603  000060  6E13               	movwf	(_display_values+4)^0,c
  2604                           
  2605                           ;Display7seg_74HC595.c: 41:                 display_values[3] = (~digits[D3])|((uint8_t)
      +                          0b00100000);
  2606  000062  0E36               	movlw	low _digits
  2607  000064  242A               	addwf	DISPLAY_Set@D3^0,w,c
  2608  000066  6ED9               	movwf	fsr2l,c
  2609  000068  6ADA               	clrf	fsr2h,c
  2610  00006A  0E00               	movlw	high _digits
  2611  00006C  22DA               	addwfc	fsr2h,f,c
  2612  00006E  50DF               	movf	indf2,w,c
  2613  000070  0AFF               	xorlw	255
  2614  000072  0920               	iorlw	32
  2615  000074  6E12               	movwf	(_display_values+3)^0,c
  2616                           
  2617                           ;Display7seg_74HC595.c: 42:                 display_values[2] = (~digits[D4])|((uint8_t)
      +                          0b00100000);
  2618  000076  0E36               	movlw	low _digits
  2619  000078  242B               	addwf	DISPLAY_Set@D4^0,w,c
  2620  00007A  6ED9               	movwf	fsr2l,c
  2621  00007C  6ADA               	clrf	fsr2h,c
  2622  00007E  0E00               	movlw	high _digits
  2623  000080  22DA               	addwfc	fsr2h,f,c
  2624  000082  50DF               	movf	indf2,w,c
  2625  000084  0AFF               	xorlw	255
  2626  000086  0920               	iorlw	32
  2627  000088  6E11               	movwf	(_display_values+2)^0,c
  2628                           
  2629                           ;Display7seg_74HC595.c: 43:                 display_values[1] = (digits[D5])&((uint8_t)~
      +                          0b00100000);
  2630  00008A  0E36               	movlw	low _digits
  2631  00008C  242C               	addwf	DISPLAY_Set@D5^0,w,c
  2632  00008E  6ED9               	movwf	fsr2l,c
  2633  000090  6ADA               	clrf	fsr2h,c
  2634  000092  0E00               	movlw	high _digits
  2635  000094  22DA               	addwfc	fsr2h,f,c
  2636  000096  50DF               	movf	indf2,w,c
  2637  000098  0BDF               	andlw	223
  2638  00009A  6E10               	movwf	(_display_values+1)^0,c
  2639                           
  2640                           ;Display7seg_74HC595.c: 44:                 display_values[0] = digits[D6];
  2641  00009C  0E36               	movlw	low _digits
  2642  00009E  242D               	addwf	DISPLAY_Set@D6^0,w,c
  2643  0000A0  6ED9               	movwf	fsr2l,c
  2644  0000A2  6ADA               	clrf	fsr2h,c
  2645  0000A4  0E00               	movlw	high _digits
  2646  0000A6  22DA               	addwfc	fsr2h,f,c
  2647  0000A8  50DF               	movf	indf2,w,c
  2648  0000AA  6E0F               	movwf	_display_values^0,c
  2649                           
  2650                           ;Display7seg_74HC595.c: 45:             }
  2651  0000AC  EFD7  F000         	goto	l1651
  2652  0000B0                     l1643:
  2653                           
  2654                           ;Display7seg_74HC595.c: 47:                 display_values[5] = digits[D1];
  2655  0000B0  0E36               	movlw	low _digits
  2656  0000B2  2430               	addwf	DISPLAY_Set@D1^0,w,c
  2657  0000B4  6ED9               	movwf	fsr2l,c
  2658  0000B6  6ADA               	clrf	fsr2h,c
  2659  0000B8  0E00               	movlw	high _digits
  2660  0000BA  22DA               	addwfc	fsr2h,f,c
  2661  0000BC  50DF               	movf	indf2,w,c
  2662  0000BE  6E14               	movwf	(_display_values+5)^0,c
  2663                           
  2664                           ;Display7seg_74HC595.c: 48:                 display_values[4] = digits[D2];
  2665  0000C0  0E36               	movlw	low _digits
  2666  0000C2  2429               	addwf	DISPLAY_Set@D2^0,w,c
  2667  0000C4  6ED9               	movwf	fsr2l,c
  2668  0000C6  6ADA               	clrf	fsr2h,c
  2669  0000C8  0E00               	movlw	high _digits
  2670  0000CA  22DA               	addwfc	fsr2h,f,c
  2671  0000CC  50DF               	movf	indf2,w,c
  2672  0000CE  6E13               	movwf	(_display_values+4)^0,c
  2673                           
  2674                           ;Display7seg_74HC595.c: 49:                 display_values[3] = ~digits[D3];
  2675  0000D0  0E36               	movlw	low _digits
  2676  0000D2  242A               	addwf	DISPLAY_Set@D3^0,w,c
  2677  0000D4  6ED9               	movwf	fsr2l,c
  2678  0000D6  6ADA               	clrf	fsr2h,c
  2679  0000D8  0E00               	movlw	high _digits
  2680  0000DA  22DA               	addwfc	fsr2h,f,c
  2681  0000DC  50DF               	movf	indf2,w,c
  2682  0000DE  0AFF               	xorlw	255
  2683  0000E0  6E12               	movwf	(_display_values+3)^0,c
  2684                           
  2685                           ;Display7seg_74HC595.c: 50:                 display_values[2] = ~digits[D4];
  2686  0000E2  0E36               	movlw	low _digits
  2687  0000E4  242B               	addwf	DISPLAY_Set@D4^0,w,c
  2688  0000E6  6ED9               	movwf	fsr2l,c
  2689  0000E8  6ADA               	clrf	fsr2h,c
  2690  0000EA  0E00               	movlw	high _digits
  2691  0000EC  22DA               	addwfc	fsr2h,f,c
  2692  0000EE  50DF               	movf	indf2,w,c
  2693  0000F0  0AFF               	xorlw	255
  2694  0000F2  6E11               	movwf	(_display_values+2)^0,c
  2695                           
  2696                           ;Display7seg_74HC595.c: 51:                 display_values[1] = digits[D5];
  2697  0000F4  0E36               	movlw	low _digits
  2698  0000F6  242C               	addwf	DISPLAY_Set@D5^0,w,c
  2699  0000F8  6ED9               	movwf	fsr2l,c
  2700  0000FA  6ADA               	clrf	fsr2h,c
  2701  0000FC  0E00               	movlw	high _digits
  2702  0000FE  22DA               	addwfc	fsr2h,f,c
  2703  000100  50DF               	movf	indf2,w,c
  2704  000102  6E10               	movwf	(_display_values+1)^0,c
  2705                           
  2706                           ;Display7seg_74HC595.c: 52:                 display_values[0] = digits[D6];
  2707  000104  0E36               	movlw	low _digits
  2708  000106  242D               	addwf	DISPLAY_Set@D6^0,w,c
  2709  000108  6ED9               	movwf	fsr2l,c
  2710  00010A  6ADA               	clrf	fsr2h,c
  2711  00010C  0E00               	movlw	high _digits
  2712  00010E  22DA               	addwfc	fsr2h,f,c
  2713  000110  50DF               	movf	indf2,w,c
  2714  000112  6E0F               	movwf	_display_values^0,c
  2715  000114  EFD7  F000         	goto	l1651
  2716  000118                     l1645:
  2717                           
  2718                           ;Display7seg_74HC595.c: 56:             display_values[5] = digits[D1];
  2719  000118  0E36               	movlw	low _digits
  2720  00011A  2430               	addwf	DISPLAY_Set@D1^0,w,c
  2721  00011C  6ED9               	movwf	fsr2l,c
  2722  00011E  6ADA               	clrf	fsr2h,c
  2723  000120  0E00               	movlw	high _digits
  2724  000122  22DA               	addwfc	fsr2h,f,c
  2725  000124  50DF               	movf	indf2,w,c
  2726  000126  6E14               	movwf	(_display_values+5)^0,c
  2727                           
  2728                           ;Display7seg_74HC595.c: 57:             display_values[4] = (digits[D2])&((uint8_t)~0b00
      +                          100000);
  2729  000128  0E36               	movlw	low _digits
  2730  00012A  2429               	addwf	DISPLAY_Set@D2^0,w,c
  2731  00012C  6ED9               	movwf	fsr2l,c
  2732  00012E  6ADA               	clrf	fsr2h,c
  2733  000130  0E00               	movlw	high _digits
  2734  000132  22DA               	addwfc	fsr2h,f,c
  2735  000134  50DF               	movf	indf2,w,c
  2736  000136  0BDF               	andlw	223
  2737  000138  6E13               	movwf	(_display_values+4)^0,c
  2738                           
  2739                           ;Display7seg_74HC595.c: 58:             display_values[3] = ~digits[D3];
  2740  00013A  0E36               	movlw	low _digits
  2741  00013C  242A               	addwf	DISPLAY_Set@D3^0,w,c
  2742  00013E  6ED9               	movwf	fsr2l,c
  2743  000140  6ADA               	clrf	fsr2h,c
  2744  000142  0E00               	movlw	high _digits
  2745  000144  22DA               	addwfc	fsr2h,f,c
  2746  000146  50DF               	movf	indf2,w,c
  2747  000148  0AFF               	xorlw	255
  2748  00014A  6E12               	movwf	(_display_values+3)^0,c
  2749                           
  2750                           ;Display7seg_74HC595.c: 59:             display_values[2] = (~digits[D4])|((uint8_t)0b00
      +                          100000);
  2751  00014C  0E36               	movlw	low _digits
  2752  00014E  242B               	addwf	DISPLAY_Set@D4^0,w,c
  2753  000150  6ED9               	movwf	fsr2l,c
  2754  000152  6ADA               	clrf	fsr2h,c
  2755  000154  0E00               	movlw	high _digits
  2756  000156  22DA               	addwfc	fsr2h,f,c
  2757  000158  50DF               	movf	indf2,w,c
  2758  00015A  0AFF               	xorlw	255
  2759  00015C  0920               	iorlw	32
  2760  00015E  6E11               	movwf	(_display_values+2)^0,c
  2761                           
  2762                           ;Display7seg_74HC595.c: 60:             display_values[1] = digits[D5];
  2763  000160  0E36               	movlw	low _digits
  2764  000162  242C               	addwf	DISPLAY_Set@D5^0,w,c
  2765  000164  6ED9               	movwf	fsr2l,c
  2766  000166  6ADA               	clrf	fsr2h,c
  2767  000168  0E00               	movlw	high _digits
  2768  00016A  22DA               	addwfc	fsr2h,f,c
  2769  00016C  50DF               	movf	indf2,w,c
  2770  00016E  6E10               	movwf	(_display_values+1)^0,c
  2771                           
  2772                           ;Display7seg_74HC595.c: 61:             display_values[0] = digits[D6];
  2773  000170  0E36               	movlw	low _digits
  2774  000172  242D               	addwf	DISPLAY_Set@D6^0,w,c
  2775  000174  6ED9               	movwf	fsr2l,c
  2776  000176  6ADA               	clrf	fsr2h,c
  2777  000178  0E00               	movlw	high _digits
  2778  00017A  22DA               	addwfc	fsr2h,f,c
  2779  00017C  50DF               	movf	indf2,w,c
  2780  00017E  6E0F               	movwf	_display_values^0,c
  2781                           
  2782                           ;Display7seg_74HC595.c: 62:             break;
  2783  000180  EFD7  F000         	goto	l1651
  2784  000184                     l1649:
  2785  000184  501D               	movf	_displayMode^0,w,c
  2786  000186  6E2E               	movwf	??_DISPLAY_Set^0,c
  2787  000188  6A2F               	clrf	(??_DISPLAY_Set+1)^0,c
  2788                           
  2789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2790                           ; Switch size 1, requested type "simple"
  2791                           ; Number of cases is 1, Range of values is 0 to 0
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte            4     3 (average)
  2795                           ;	Chosen strategy is simple_byte
  2796  00018A  502F               	movf	(??_DISPLAY_Set+1)^0,w,c
  2797  00018C  0A00               	xorlw	0	; case 0
  2798  00018E  B4D8               	btfsc	status,2,c
  2799  000190  EFCC  F000         	goto	l1969
  2800  000194  EFD7  F000         	goto	l1651
  2801  000198                     l1969:
  2802                           
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 2, Range of values is 0 to 1
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            7     4 (average)
  2808                           ;	Chosen strategy is simple_byte
  2809  000198  502E               	movf	??_DISPLAY_Set^0,w,c
  2810  00019A  0A00               	xorlw	0	; case 0
  2811  00019C  B4D8               	btfsc	status,2,c
  2812  00019E  EF18  F000         	goto	l1639
  2813  0001A2  0A01               	xorlw	1	; case 1
  2814  0001A4  B4D8               	btfsc	status,2,c
  2815  0001A6  EF8C  F000         	goto	l1645
  2816  0001AA  EFD7  F000         	goto	l1651
  2817  0001AE                     l1651:
  2818                           
  2819                           ;Display7seg_74HC595.c: 68:     DISPLAY_Update();
  2820  0001AE  EC16  F004         	call	_DISPLAY_Update	;wreg free
  2821  0001B2  0012               	return		;funcret
  2822  0001B4                     __end_of_DISPLAY_Set:
  2823                           	callstack 0
  2824                           
  2825 ;; *************** function _DISPLAY_Update *****************
  2826 ;; Defined at:
  2827 ;;		line 128 in file "Display7seg_74HC595.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  i               1    0        char 
  2832 ;;  i               1    6[COMRAM] char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2842 ;;      Params:         0       0       0       0       0       0       0
  2843 ;;      Locals:         1       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0
  2845 ;;      Totals:         1       0       0       0       0       0       0
  2846 ;;Total ram usage:        1 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 3
  2849 ;; This function calls:
  2850 ;;		_DRIVER_74HC595_ShiftOut
  2851 ;; This function is called by:
  2852 ;;		_DISPLAY_Set
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text26
  2857  00082C                     __ptext26:
  2858                           	callstack 0
  2859  00082C                     _DISPLAY_Update:
  2860                           	callstack 23
  2861  00082C                     
  2862                           ;Display7seg_74HC595.c: 130:         for (int8_t i=0; i<NUMBERS_OF_DISPLAYS; i++){
  2863  00082C  0E00               	movlw	0
  2864  00082E  6E28               	movwf	DISPLAY_Update@i^0,c
  2865  000830  EF24  F004         	goto	l1155
  2866  000834                     l1151:
  2867                           
  2868                           ;Display7seg_74HC595.c: 131:             DRIVER_74HC595_ShiftOut(display_values[i]);
  2869  000834  0E0F               	movlw	low _display_values
  2870  000836  2428               	addwf	DISPLAY_Update@i^0,w,c
  2871  000838  6ED9               	movwf	fsr2l,c
  2872  00083A  6ADA               	clrf	fsr2h,c
  2873  00083C  0E00               	movlw	high _display_values
  2874  00083E  22DA               	addwfc	fsr2h,f,c
  2875  000840  50DF               	movf	indf2,w,c
  2876  000842  ECCD  F003         	call	_DRIVER_74HC595_ShiftOut
  2877  000846                     
  2878                           ;Display7seg_74HC595.c: 132:         }
  2879  000846  2A28               	incf	DISPLAY_Update@i^0,f,c
  2880  000848                     l1155:
  2881  000848  5028               	movf	DISPLAY_Update@i^0,w,c
  2882  00084A  0A80               	xorlw	128
  2883  00084C  0F7A               	addlw	-134
  2884  00084E  A0D8               	btfss	status,0,c
  2885  000850  EF2C  F004         	goto	u41
  2886  000854  EF2E  F004         	goto	u40
  2887  000858                     u41:
  2888  000858  EF1A  F004         	goto	l1151
  2889  00085C                     u40:
  2890  00085C  828A               	bsf	138,1,c	;volatile
  2891  00085E  928A               	bcf	138,1,c	;volatile
  2892  000860  0012               	return		;funcret
  2893  000862                     __end_of_DISPLAY_Update:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _DRIVER_74HC595_ShiftOut *****************
  2897 ;; Defined at:
  2898 ;;		line 152 in file "Display7seg_74HC595.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  data            1    wreg     unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  data            1    4[COMRAM] unsigned char 
  2903 ;;  i               1    5[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2913 ;;      Params:         0       0       0       0       0       0       0
  2914 ;;      Locals:         2       0       0       0       0       0       0
  2915 ;;      Temps:          3       0       0       0       0       0       0
  2916 ;;      Totals:         5       0       0       0       0       0       0
  2917 ;;Total ram usage:        5 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 2
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_DISPLAY_Update
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text27
  2928  00079A                     __ptext27:
  2929                           	callstack 0
  2930  00079A                     _DRIVER_74HC595_ShiftOut:
  2931                           	callstack 23
  2932                           
  2933                           ;incstack = 0
  2934                           ;DRIVER_74HC595_ShiftOut@data stored from wreg
  2935  00079A  6E26               	movwf	DRIVER_74HC595_ShiftOut@data^0,c
  2936  00079C                     
  2937                           ;Display7seg_74HC595.c: 154:     for (uint8_t i=0; i<8; i++){
  2938  00079C  0E00               	movlw	0
  2939  00079E  6E27               	movwf	DRIVER_74HC595_ShiftOut@i^0,c
  2940  0007A0                     l1143:
  2941                           
  2942                           ;Display7seg_74HC595.c: 155:         if (data & (0x80>>i)){
  2943  0007A0  C027  F023         	movff	DRIVER_74HC595_ShiftOut@i,??_DRIVER_74HC595_ShiftOut
  2944  0007A4  0E80               	movlw	128
  2945  0007A6  6E24               	movwf	(??_DRIVER_74HC595_ShiftOut+1)^0,c
  2946  0007A8  0E00               	movlw	0
  2947  0007AA  6E25               	movwf	(??_DRIVER_74HC595_ShiftOut+2)^0,c
  2948  0007AC  2A23               	incf	??_DRIVER_74HC595_ShiftOut^0,f,c
  2949  0007AE  EFDC  F003         	goto	u14
  2950  0007B2                     u15:
  2951  0007B2  3425               	rlcf	(??_DRIVER_74HC595_ShiftOut+2)^0,w,c
  2952  0007B4  3225               	rrcf	(??_DRIVER_74HC595_ShiftOut+2)^0,f,c
  2953  0007B6  3224               	rrcf	(??_DRIVER_74HC595_ShiftOut+1)^0,f,c
  2954  0007B8                     u14:
  2955  0007B8  2E23               	decfsz	??_DRIVER_74HC595_ShiftOut^0,f,c
  2956  0007BA  EFD9  F003         	goto	u15
  2957  0007BE  5024               	movf	(??_DRIVER_74HC595_ShiftOut+1)^0,w,c
  2958  0007C0  1426               	andwf	DRIVER_74HC595_ShiftOut@data^0,w,c
  2959  0007C2  0900               	iorlw	0
  2960  0007C4  B4D8               	btfsc	status,2,c
  2961  0007C6  EFE7  F003         	goto	u21
  2962  0007CA  EFE9  F003         	goto	u20
  2963  0007CE                     u21:
  2964  0007CE  EFEC  F003         	goto	l64
  2965  0007D2                     u20:
  2966  0007D2  808A               	bsf	138,0,c	;volatile
  2967  0007D4  EFED  F003         	goto	l66
  2968  0007D8                     l64:
  2969  0007D8  908A               	bcf	138,0,c	;volatile
  2970  0007DA                     l66:
  2971  0007DA  848A               	bsf	138,2,c	;volatile
  2972  0007DC  948A               	bcf	138,2,c	;volatile
  2973  0007DE                     
  2974                           ;Display7seg_74HC595.c: 164:     }
  2975  0007DE  2A27               	incf	DRIVER_74HC595_ShiftOut@i^0,f,c
  2976  0007E0  0E07               	movlw	7
  2977  0007E2  6427               	cpfsgt	DRIVER_74HC595_ShiftOut@i^0,c
  2978  0007E4  EFF6  F003         	goto	u31
  2979  0007E8  EFF8  F003         	goto	u30
  2980  0007EC                     u31:
  2981  0007EC  EFD0  F003         	goto	l1143
  2982  0007F0                     u30:
  2983  0007F0  0012               	return		;funcret
  2984  0007F2                     __end_of_DRIVER_74HC595_ShiftOut:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _INTERRUPT_LowManager *****************
  2988 ;; Defined at:
  2989 ;;		line 62 in file "isr_manager.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		None
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3003 ;;      Params:         0       0       0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0
  3005 ;;      Temps:          1       0       0       0       0       0       0
  3006 ;;      Totals:         1       0       0       0       0       0       0
  3007 ;;Total ram usage:        1 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		Interrupt level 1
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	intcodelo
  3018  000018                     __pintcodelo:
  3019                           	callstack 0
  3020  000018                     _INTERRUPT_LowManager:
  3021                           	callstack 23
  3022                           
  3023                           ;incstack = 0
  3024  000018  8048               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3025  00001A  CFE0 F022          	movff	bsr,??_INTERRUPT_LowManager
  3026  00001E  C022  FFE0         	movff	??_INTERRUPT_LowManager,bsr
  3027  000022  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3028  000024  0010               	retfie	
  3029  000026                     __end_of_INTERRUPT_LowManager:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _INTERRUPT_HighManager *****************
  3033 ;; Defined at:
  3034 ;;		line 46 in file "isr_manager.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3048 ;;      Params:         0       0       0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0
  3051 ;;      Totals:         0       0       0       0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		Interrupt level 2
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	intcode
  3062  000008                     __pintcode:
  3063                           	callstack 0
  3064  000008                     _INTERRUPT_HighManager:
  3065                           	callstack 23
  3066                           
  3067                           ;incstack = 0
  3068  000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3069  00000A  EF4B  F004         	goto	int_func
  3070                           
  3071                           	psect	intcode_body
  3072  000896                     __pintcode_body:
  3073                           	callstack 23
  3074  000896                     int_func:
  3075                           	callstack 23
  3076  000896                     
  3077                           ;isr_manager.c: 47:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  3078  000896  AAF2               	btfss	242,5,c	;volatile
  3079  000898  EF50  F004         	goto	i2u49_41
  3080  00089C  EF52  F004         	goto	i2u49_40
  3081  0008A0                     i2u49_41:
  3082  0008A0  EF60  F004         	goto	i2l456
  3083  0008A4                     i2u49_40:
  3084  0008A4  A4F2               	btfss	242,2,c	;volatile
  3085  0008A6  EF57  F004         	goto	i2u50_41
  3086  0008AA  EF59  F004         	goto	i2u50_40
  3087  0008AE                     i2u50_41:
  3088  0008AE  EF60  F004         	goto	i2l456
  3089  0008B2                     i2u50_40:
  3090  0008B2                     
  3091                           ;isr_manager.c: 48:         INTCONbits.TMR0IF = 0;
  3092  0008B2  94F2               	bcf	242,2,c	;volatile
  3093  0008B4                     
  3094                           ;isr_manager.c: 49:         TMR0_OVR_FLAG = 1;
  3095  0008B4  0E01               	movlw	1
  3096  0008B6  6E1B               	movwf	_TMR0_OVR_FLAG^0,c
  3097                           
  3098                           ;isr_manager.c: 50:         ((void)(TMR0H=((0xF830)>>8),TMR0L=((0xF830)&0xFF)));
  3099  0008B8  0EF8               	movlw	248
  3100  0008BA  6ED7               	movwf	215,c	;volatile
  3101  0008BC  0E30               	movlw	48
  3102  0008BE  6ED6               	movwf	214,c	;volatile
  3103  0008C0                     i2l456:
  3104  0008C0  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3105  0008C2  0011               	retfie		f
  3106  0008C4                     __end_of_INTERRUPT_HighManager:
  3107                           	callstack 0
  3108  0000                     
  3109                           	psect	rparam
  3110  0000                     
  3111                           	psect	temp
  3112  000048                     btemp:
  3113                           	callstack 0
  3114  000048                     	ds	1
  3115  0000                     int$flags	set	btemp
  3116  0000                     wtemp8	set	btemp+1
  3117  0000                     ttemp5	set	btemp+1
  3118  0000                     ttemp6	set	btemp+4
  3119  0000                     ttemp7	set	btemp+8
  3120                           
  3121                           	psect	idloc
  3122                           
  3123                           ;Config register IDLOC0 @ 0x200000
  3124                           ;	unspecified, using default values
  3125  200000                     	org	2097152
  3126  200000  FF                 	db	255
  3127                           
  3128                           ;Config register IDLOC1 @ 0x200001
  3129                           ;	unspecified, using default values
  3130  200001                     	org	2097153
  3131  200001  FF                 	db	255
  3132                           
  3133                           ;Config register IDLOC2 @ 0x200002
  3134                           ;	unspecified, using default values
  3135  200002                     	org	2097154
  3136  200002  FF                 	db	255
  3137                           
  3138                           ;Config register IDLOC3 @ 0x200003
  3139                           ;	unspecified, using default values
  3140  200003                     	org	2097155
  3141  200003  FF                 	db	255
  3142                           
  3143                           ;Config register IDLOC4 @ 0x200004
  3144                           ;	unspecified, using default values
  3145  200004                     	org	2097156
  3146  200004  FF                 	db	255
  3147                           
  3148                           ;Config register IDLOC5 @ 0x200005
  3149                           ;	unspecified, using default values
  3150  200005                     	org	2097157
  3151  200005  FF                 	db	255
  3152                           
  3153                           ;Config register IDLOC6 @ 0x200006
  3154                           ;	unspecified, using default values
  3155  200006                     	org	2097158
  3156  200006  FF                 	db	255
  3157                           
  3158                           ;Config register IDLOC7 @ 0x200007
  3159                           ;	unspecified, using default values
  3160  200007                     	org	2097159
  3161  200007  FF                 	db	255
  3162                           
  3163                           	psect	config
  3164                           
  3165                           ; Padding undefined space
  3166  300000                     	org	3145728
  3167  300000  FF                 	db	255
  3168                           
  3169                           ;Config register CONFIG1H @ 0x300001
  3170                           ;	Oscillator Selection bits
  3171                           ;	FOSC = INTIO67, Internal oscillator block
  3172                           ;	4X PLL Enable
  3173                           ;	PLLCFG = OFF, Oscillator used directly
  3174                           ;	Primary clock enable bit
  3175                           ;	PRICLKEN = ON, Primary clock enabled
  3176                           ;	Fail-Safe Clock Monitor Enable bit
  3177                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3178                           ;	Internal/External Oscillator Switchover bit
  3179                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3180  300001                     	org	3145729
  3181  300001  28                 	db	40
  3182                           
  3183                           ;Config register CONFIG2L @ 0x300002
  3184                           ;	Power-up Timer Enable bit
  3185                           ;	PWRTEN = OFF, Power up timer disabled
  3186                           ;	Brown-out Reset Enable bits
  3187                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3188                           ;	Brown Out Reset Voltage bits
  3189                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3190  300002                     	org	3145730
  3191  300002  19                 	db	25
  3192                           
  3193                           ;Config register CONFIG2H @ 0x300003
  3194                           ;	Watchdog Timer Enable bits
  3195                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3196                           ;	Watchdog Timer Postscale Select bits
  3197                           ;	WDTPS = 32768, 1:32768
  3198  300003                     	org	3145731
  3199  300003  3C                 	db	60
  3200                           
  3201                           ; Padding undefined space
  3202  300004                     	org	3145732
  3203  300004  FF                 	db	255
  3204                           
  3205                           ;Config register CONFIG3H @ 0x300005
  3206                           ;	CCP2 MUX bit
  3207                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3208                           ;	PORTB A/D Enable bit
  3209                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3210                           ;	P3A/CCP3 Mux bit
  3211                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3212                           ;	HFINTOSC Fast Start-up
  3213                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  3214                           ;	Timer3 Clock input mux bit
  3215                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3216                           ;	ECCP2 B output mux bit
  3217                           ;	P2BMX = PORTB5, P2B is on RB5
  3218                           ;	MCLR Pin Enable bit
  3219                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3220  300005                     	org	3145733
  3221  300005  B5                 	db	181
  3222                           
  3223                           ;Config register CONFIG4L @ 0x300006
  3224                           ;	Stack Full/Underflow Reset Enable bit
  3225                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3226                           ;	Single-Supply ICSP Enable bit
  3227                           ;	LVP = OFF, Single-Supply ICSP disabled
  3228                           ;	Extended Instruction Set Enable bit
  3229                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3230                           ;	Background Debug
  3231                           ;	DEBUG = 0x1, unprogrammed default
  3232  300006                     	org	3145734
  3233  300006  81                 	db	129
  3234                           
  3235                           ; Padding undefined space
  3236  300007                     	org	3145735
  3237  300007  FF                 	db	255
  3238                           
  3239                           ;Config register CONFIG5L @ 0x300008
  3240                           ;	Code Protection Block 0
  3241                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3242                           ;	Code Protection Block 1
  3243                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3244                           ;	Code Protection Block 2
  3245                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3246                           ;	Code Protection Block 3
  3247                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3248  300008                     	org	3145736
  3249  300008  0F                 	db	15
  3250                           
  3251                           ;Config register CONFIG5H @ 0x300009
  3252                           ;	Boot Block Code Protection bit
  3253                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3254                           ;	Data EEPROM Code Protection bit
  3255                           ;	CPD = OFF, Data EEPROM not code-protected
  3256  300009                     	org	3145737
  3257  300009  C0                 	db	192
  3258                           
  3259                           ;Config register CONFIG6L @ 0x30000A
  3260                           ;	Write Protection Block 0
  3261                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3262                           ;	Write Protection Block 1
  3263                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3264                           ;	Write Protection Block 2
  3265                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3266                           ;	Write Protection Block 3
  3267                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3268  30000A                     	org	3145738
  3269  30000A  0F                 	db	15
  3270                           
  3271                           ;Config register CONFIG6H @ 0x30000B
  3272                           ;	Configuration Register Write Protection bit
  3273                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3274                           ;	Boot Block Write Protection bit
  3275                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3276                           ;	Data EEPROM Write Protection bit
  3277                           ;	WRTD = OFF, Data EEPROM not write-protected
  3278  30000B                     	org	3145739
  3279  30000B  E0                 	db	224
  3280                           
  3281                           ;Config register CONFIG7L @ 0x30000C
  3282                           ;	Table Read Protection Block 0
  3283                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3284                           ;	Table Read Protection Block 1
  3285                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3286                           ;	Table Read Protection Block 2
  3287                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3288                           ;	Table Read Protection Block 3
  3289                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3290  30000C                     	org	3145740
  3291  30000C  0F                 	db	15
  3292                           
  3293                           ;Config register CONFIG7H @ 0x30000D
  3294                           ;	Boot Block Table Read Protection bit
  3295                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3296  30000D                     	org	3145741
  3297  30000D  40                 	db	64
  3298                           tosu	equ	0xFFF
  3299                           tosh	equ	0xFFE
  3300                           tosl	equ	0xFFD
  3301                           stkptr	equ	0xFFC
  3302                           pclatu	equ	0xFFB
  3303                           pclath	equ	0xFFA
  3304                           pcl	equ	0xFF9
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           indf0	equ	0xFEF
  3312                           postinc0	equ	0xFEE
  3313                           postdec0	equ	0xFED
  3314                           preinc0	equ	0xFEC
  3315                           plusw0	equ	0xFEB
  3316                           fsr0h	equ	0xFEA
  3317                           fsr0l	equ	0xFE9
  3318                           wreg	equ	0xFE8
  3319                           indf1	equ	0xFE7
  3320                           postinc1	equ	0xFE6
  3321                           postdec1	equ	0xFE5
  3322                           preinc1	equ	0xFE4
  3323                           plusw1	equ	0xFE3
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           bsr	equ	0xFE0
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           preinc2	equ	0xFDC
  3331                           plusw2	equ	0xFDB
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      71
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Read_Bytes_From_DS1307_RTC@pData	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    UpdateDateToDisplay@pDateArray	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    UpdateTimeToDisplay@pTimeArray	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    sp__Get_DS1307_RTC_Date	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    sp__Get_DS1307_RTC_Time	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Process->_MCU_SetOutDisplay
    _MCU_SetOutDisplay->_UpdateDateToDisplay
    _MCU_SetOutDisplay->_UpdateTimeToDisplay
    _UpdateTimeToDisplay->_DISPLAY_Set
    _UpdateDateToDisplay->_DISPLAY_Set
    _Get_DS1307_RTC_Time->_Read_Bytes_From_DS1307_RTC
    _Get_DS1307_RTC_Date->_Read_Bytes_From_DS1307_RTC
    _Read_Bytes_From_DS1307_RTC->_I2C1_Send
    _DISPLAY_Reset->_DISPLAY_Set
    _DISPLAY_Set->_DISPLAY_Update
    _DISPLAY_Update->_DRIVER_74HC595_ShiftOut

Critical Paths under _INTERRUPT_LowManager in COMRAM

    None.

Critical Paths under _INTERRUPT_HighManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_LowManager in BANK0

    None.

Critical Paths under _INTERRUPT_HighManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_LowManager in BANK1

    None.

Critical Paths under _INTERRUPT_HighManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_LowManager in BANK2

    None.

Critical Paths under _INTERRUPT_HighManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_LowManager in BANK3

    None.

Critical Paths under _INTERRUPT_HighManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_LowManager in BANK4

    None.

Critical Paths under _INTERRUPT_HighManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_LowManager in BANK5

    None.

Critical Paths under _INTERRUPT_HighManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16526
                  _SYSTEM_Initialize
                     _SYSTEM_Process
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Process                                       0     0      0   14490
                 _MCU_SetModeDisplay
                  _MCU_SetOutDisplay
 ---------------------------------------------------------------------------------
 (2) _MCU_SetOutDisplay                                    2     2      0   14490
                                             18 COMRAM     2     2      0
                _Get_DS1307_RTC_Date
                _Get_DS1307_RTC_Time
                _UpdateDateToDisplay
                _UpdateTimeToDisplay
 ---------------------------------------------------------------------------------
 (3) _UpdateTimeToDisplay                                  3     1      2    6792
                                             15 COMRAM     3     1      2
                        _DISPLAY_Set
                _Get_DS1307_RTC_Time (ARG)
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _UpdateDateToDisplay                                  3     1      2    6792
                                             15 COMRAM     3     1      2
                        _DISPLAY_Set
                _Get_DS1307_RTC_Date (ARG)
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2272
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2276
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Get_DS1307_RTC_Time                                  3     1      2     453
                                              9 COMRAM     3     1      2
         _Read_Bytes_From_DS1307_RTC
 ---------------------------------------------------------------------------------
 (3) _Get_DS1307_RTC_Date                                  3     1      2     453
                                              9 COMRAM     3     1      2
         _Read_Bytes_From_DS1307_RTC
 ---------------------------------------------------------------------------------
 (4) _Read_Bytes_From_DS1307_RTC                           7     3      4     453
                                              2 COMRAM     7     3      4
                       _I2C1_ReStart
                          _I2C1_Read
                          _I2C1_Send
                      _I2C1_Send_ACK
                     _I2C1_Send_NACK
                         _I2C1_Start
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Send_NACK                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Send_ACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Send                                            1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ReStart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_SetModeDisplay                                   2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0    2036
                                             15 COMRAM     1     1      0
                      _DISPLAY_Reset
                          _I2C1_Init
                     _ISR_Initialize
                     _MCU_Initialize
              _OSCILLATOR_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ISR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_Reset                                        0     0      0    2036
                        _DISPLAY_Set
 ---------------------------------------------------------------------------------
 (4) _DISPLAY_Set                                          8     3      5    2036
                                              7 COMRAM     8     3      5
                     _DISPLAY_Update
 ---------------------------------------------------------------------------------
 (5) _DISPLAY_Update                                       2     2      0     120
                                              6 COMRAM     1     1      0
            _DRIVER_74HC595_ShiftOut
 ---------------------------------------------------------------------------------
 (6) _DRIVER_74HC595_ShiftOut                              5     5      0      60
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_LowManager                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_HighManager                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _DISPLAY_Reset
       _DISPLAY_Set
         _DISPLAY_Update
           _DRIVER_74HC595_ShiftOut
     _I2C1_Init
     _ISR_Initialize
     _MCU_Initialize
     _OSCILLATOR_Initialize
     _TMR0_Initialize
   _SYSTEM_Process
     _MCU_SetModeDisplay
     _MCU_SetOutDisplay
       _Get_DS1307_RTC_Date
         _Read_Bytes_From_DS1307_RTC
           _I2C1_ReStart
           _I2C1_Read
           _I2C1_Send
           _I2C1_Send_ACK
           _I2C1_Send_NACK
           _I2C1_Start
           _I2C1_Stop
       _Get_DS1307_RTC_Time
         _Read_Bytes_From_DS1307_RTC
       _UpdateDateToDisplay
         _DISPLAY_Set
         _Get_DS1307_RTC_Date (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)
       _UpdateTimeToDisplay
         _DISPLAY_Set
         _Get_DS1307_RTC_Time (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)

 _INTERRUPT_LowManager (ROOT)

 _INTERRUPT_HighManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      47       1       75.5%
BITBIGSFRlll        30      0       0      26        0.0%
BITBIGSFRhhllhh     20      0       0      20        0.0%
BITBIGSFRhhhhhl     19      0       0      16        0.0%
BITBIGSFRllh        10      0       0      25        0.0%
BITBIGSFRhhhhhh      D      0       0      15        0.0%
BITBIGSFRhhlll       9      0       0      22        0.0%
BITBIGSFRlh          7      0       0      24        0.0%
BITBIGSFRhl          7      0       0      23        0.0%
BITBIGSFRhhlhl       6      0       0      19        0.0%
BITBIGSFRhhllhl      5      0       0      21        0.0%
BITBIGSFRhhlhh       2      0       0      18        0.0%
BITBIGSFRhhhl        1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      27        0.0%
DATA                 0      0      47      29        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Aug 20 23:57:01 2023

                                 l31 0976                                   l51 085C  
                                 l28 01B2                                   l61 07D2  
                                 l53 085E                                   l70 07F0  
                                 l55 0860                                   l64 07D8  
                                 l66 07DA                                   l68 07DC  
                                 u20 07D2                                   u21 07CE  
                                 u30 07F0                                   u14 07B8  
                                 u31 07EC                                   u15 07B2  
                                 u40 085C                                   u41 0858  
                                 u50 09DE                                   u51 09DA  
                                 u60 08D8                                   u61 08D4  
                                 u70 08EA                                   u71 08E4  
                                 u80 09CA                                   u81 09C6  
                                 u90 09F2                                   u91 09EE  
                                 u76 08EC                         ___awdiv@sign 0028  
                                 bsr 000FE0                                  l210 0730  
                                l222 03AA                                  l225 02B2  
                                l403 08CA                                  l219 06C4  
                                l405 08D8                                  l406 08EC  
                                l191 093C                                  l183 0914  
                                l415 09A6                                  l343 09D0  
                                l337 0A18                                  l417 09B4  
                                l345 09DE                                  l273 0652  
                                l194 0A36                                  l418 09B8  
                                l346 09E0                                  l370 09CC  
                                l355 09E4                                  l284 04FE  
                                l188 0894                                  l197 095A  
                                l357 09F2                                  l381 09A0  
                                l358 09F4                                  l382 09A2  
                                l294 0798                                  l447 0A30  
                                l391 097C                                  l367 09BC  
                                l288 0522                                  l393 098A  
                                l369 09CA                                  l394 098C  
                                l379 0992                                  l708 05D2  
                                l695 046E                                  u100 09B4  
                                u101 09B0                                  u110 098A  
                                u111 0986                                  u120 09A0  
                                u121 099C                                  u300 06D8  
                                u301 06D4                                  u310 06EE  
                                u311 06EA                                  u510 0040  
                                u511 003C                                  u520 05F0  
                                u600 0536                                  u521 05EC  
                                u601 0532                                  u530 064A  
                                u610 0550                                  u531 0646  
                                u611 054C                                  u540 03BE  
                                u620 056A                                  u700 0884  
                                u541 03BA                                  u621 0566  
                                u701 0880                                  u550 03D8  
                                u630 0588                                  u551 03D4  
                                u631 0584                                  u560 03FE  
                                u640 059E                                  u561 03FA  
                                u641 059A                                  u570 041C  
                                u650 05C2                                  u571 0418  
                                u651 05BE                                  u660 04C6  
                                u580 0438                                  u661 04C2  
                                u581 0434                                  u670 04D4  
                                u590 045E                                  u671 04D0  
                                u591 045A                                  u680 066A  
                                u681 0666                                  u690 0872  
                                u747 0908                                  u691 086E  
                       ___awmod@sign 0028                      ??_I2C1_Send_ACK 0023  
                                wreg 000FE8                    _MCU_SetOutDisplay 0654  
                               l1143 07A0                                 l1151 0834  
                               l1145 07DE                                 l1137 079C  
                               l1153 0846                                 l1401 0706  
                               l1147 07E0                                 l1155 0848  
                               l1171 09E2                                 l1149 082C  
                               l1173 09A4                                 l1181 098E  
                               l1165 09CE                                 l1175 09B6  
                               l1167 08C6                                 l1169 09BA  
                               l1363 0916                                 l1371 0954  
                               l1179 0978                                 l1381 0A2A  
                               l1365 0A32                                 l1373 0956  
                               l1701 03FE                                 l1375 0958  
                               l1367 093E                                 l1391 06DE  
                               l1383 06C6                                 l1711 0438  
                               l1703 0406                                 l1641 0040  
                               l1377 0A08                                 l1369 0948  
                               l1393 06EE                                 l1385 06C8  
                               l1801 0760                                 l1721 045E  
                               l1713 0440                                 l1705 040E  
                               l1651 01AE                                 l1643 00B0  
                               l1379 0A0C                                 l1395 06F6  
                               l1387 06D8                                 l1803 0764  
                               l1723 0466                                 l1715 0442  
                               l1707 041C                                 l1731 0536  
                               l1645 0118                                 l1637 002C  
                               l1397 06FE                                 l1389 06DC  
                               l1661 05DA                                 l1805 0778  
                               l1717 0448                                 l1709 0422  
                               l1741 056A                                 l1733 053E  
                               l1813 01B4                                 l1821 065A  
                               l1639 0030                                 l1815 095C  
                               l1671 060E                                 l1663 05F0  
                               l1807 077C                                 l1719 044E  
                               l1751 05A6                                 l1743 0572  
                               l1735 0542                                 l1727 0524  
                               l1823 066A                                 l1649 0184  
                               l1841 08FE                                 l1681 064A  
                               l1673 061A                                 l1665 05F6  
                               l1657 05D6                                 l1809 0790  
                               l1753 05AC                                 l1745 057A  
                               l1737 0550                                 l1729 0528  
                               l1825 066E                                 l1833 069A  
                               l1817 0654                                 l1843 0902  
                               l1675 061E                                 l1667 05FA  
                               l1771 04A4                                 l1763 0470  
                               l1691 03CA                                 l1683 03AC  
                               l1747 0588                                 l1755 05B2  
                               l1739 0558                                 l1827 0672  
                               l1819 0658                                 l1851 0874  
                               l1845 0910                                 l1677 0630  
                               l1669 0600                                 l1781 04E0  
                               l1773 04B8                                 l1765 0486  
                               l1693 03D8                                 l1685 03B0  
                               l1757 05C2                                 l1749 059E  
                               l1829 0686                                 l1853 0884  
                               l1839 08EE                                 l1679 0634  
                               l1783 04E4                                 l1775 04C6  
                               l1767 048A                                 l1695 03E0  
                               l1687 03BE                                 l1759 05CA  
                               l1855 0888                                 l1847 0862  
                               l1785 0502                                 l1777 04D4  
                               l1769 04A0                                 l1697 03E4  
                               l1689 03C6                                 l1793 02B4  
                               l1857 088C                                 l1849 0872  
                               l1881 0A1E                                 l1795 0732  
                               l1787 0516                                 l1779 04DC  
                               l1699 03EC                                 l1859 0890  
                               l1797 0748                                 l1789 051A  
                               l1965 06AE                                 l1967 071A  
                               l1799 074C                                 l1879 0A1A  
                               l1969 0198                   ?_MCU_SetOutDisplay 0022  
                               _Temp 0016                                 _main 0A1A  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0048                                 prodl 000FF3  
                               start 0026                     ??_I2C1_Send_NACK 0023  
                ??_MCU_SetOutDisplay 0034                         ___param_bank 000000  
                _UpdateTimeToDisplay 02B4              __end_of_TMR0_Initialize 095C  
      __end_of_OSCILLATOR_Initialize 0A38                    __end_of_I2C1_Init 0A1A  
                  __end_of_I2C1_Read 09BA                    __end_of_I2C1_Send 08EE  
                              ?_main 0022                      __end_of___awdiv 0470  
                  __end_of_I2C1_Stop 09CE                      __end_of___awmod 05D4  
                    ___awdiv@divisor 0025                                i1l461 001E  
                              i2l456 08C0                      ___awdiv@counter 0027  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _PORTA 000F80                                _PORTB 000F81  
                              _PORTC 000F82                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
          __end_of_MCU_SetOutDisplay 06C6   __end_of_Read_Bytes_From_DS1307_RTC 0654  
         _Read_Bytes_From_DS1307_RTC 05D4                     ??_MCU_Initialize 0023  
               ?_UpdateTimeToDisplay 0031                                tablat 000FF5  
                              ttemp5 0049                                ttemp6 004C  
                              ttemp7 0050                                status 000FD8  
                              wtemp8 0049                         ??_I2C1_Start 0023  
                    __initialization 07F2                         __end_of_main 0A2A  
        __end_of_Get_DS1307_RTC_Date 079A          __end_of_Get_DS1307_RTC_Time 0524  
                             ??_main 0036                        __activetblptr 000002  
                     _ISR_Initialize 0A2A                ??_UpdateTimeToDisplay 0033  
                 __end_of_I2C1_Start 09E2                     ___awdiv@dividend 0023  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               i2l1571 08A4  
                             i2l1573 08B2                               i2l1575 08B4  
                             i2l1569 0896                       _tmr0_counterMs 001A  
           DRIVER_74HC595_ShiftOut@i 0027                __end_of_DISPLAY_Reset 0978  
                          ??___awdiv 0027                            ??___awmod 0027  
                             _digits 0036                     ?_TMR0_Initialize 0022  
                             clear_0 0818                     ___awdiv@quotient 0029  
                    ___awmod@divisor 0025               __end_of_ISR_Initialize 0A32  
                             isa$std 000001                      ___awmod@counter 0027  
                       __pdataCOMRAM 0036                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
        __end_of_UpdateDateToDisplay 02B4                    _SYSTEM_Initialize 08EE  
                         __accesstop 0060              __end_of__initialization 081E  
                 ?_SYSTEM_Initialize 0022                        ___rparam_used 000001  
Read_Bytes_From_DS1307_RTC@NoOfBytes 0026                       __pcstackCOMRAM 0022  
                ??_SYSTEM_Initialize 0031             ?_DRIVER_74HC595_ShiftOut 0022  
                    ?_ISR_Initialize 0022                _INTERRUPT_HighManager 0008  
          __end_of_SYSTEM_Initialize 0916                       _DISPLAY_Update 082C  
        ?_Read_Bytes_From_DS1307_RTC 0024                            _I2C1_Init 0A08  
                          _I2C1_Read 09A4                            _I2C1_Send 08C4  
                          _I2C1_Stop 09BA                              i2u50_40 08B2  
                            i2u50_41 08AE                              i2u49_40 08A4  
                            i2u49_41 08A0                              _SSP1ADD 000FC8  
              __end_of_I2C1_Send_ACK 09A4                              _SSP2ADD 000F6E  
                            _SSP1BUF 000FC9                              _SSP2BUF 000F6F  
                         _dotsEnable 001C                              __Hparam 0000  
                            _Seconds 0018                              __Lparam 0000  
    __end_of_DRIVER_74HC595_ShiftOut 07F2                              ___awdiv 03AC  
                            ___awmod 0524               __end_of_DISPLAY_Update 0862  
                            __pcinit 07F2                              __ramtop 0600  
                            __ptext0 0A1A                              __ptext1 0862  
                            __ptext2 0654                              __ptext3 02B4  
                            __ptext4 01B4                              __ptext5 0524  
                            __ptext6 03AC                              __ptext7 0470  
                            __ptext8 0732                              __ptext9 05D4  
                          _T0CONbits 000FD5                _OSCILLATOR_Initialize 0A32  
      UpdateTimeToDisplay@pTimeArray 0031               ?_INTERRUPT_HighManager 0022  
                   ___awmod@dividend 0023                           ?_I2C1_Init 0022  
                         ?_I2C1_Read 0022                           ?_I2C1_Send 0022  
                         ?_I2C1_Stop 0022                       __pintcode_body 0896  
               end_of_initialization 081E                        ?_I2C1_ReStart 0022  
                      __Lmediumconst 0000                              int_func 0896  
                      ??_DISPLAY_Set 002E                              postdec1 000FE5  
                            postinc0 000FEE                      ?_DISPLAY_Update 0022  
        __end_of_UpdateTimeToDisplay 03AC                      DISPLAY_Update@i 0028  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
  Read_Bytes_From_DS1307_RTC@Address 0028                       ??_I2C1_ReStart 0023  
                      _dateToDisplay 0001                     ??_ISR_Initialize 0023  
                     _SYSTEM_Process 0862                        __pidataCOMRAM 09F6  
                __end_of_DISPLAY_Set 01B4               ?_OSCILLATOR_Initialize 0022  
       __end_of_INTERRUPT_LowManager 0026                  start_initialization 07F2  
                        ??_I2C1_Init 0023                          ??_I2C1_Read 0023  
                        ??_I2C1_Send 0023                          ??_I2C1_Stop 0023  
             __end_of_SYSTEM_Process 0896        UpdateDateToDisplay@pDateArray 0031  
        Read_Bytes_From_DS1307_RTC@i 0029                        DISPLAY_Set@D1 0030  
                      DISPLAY_Set@D2 0029                        DISPLAY_Set@D3 002A  
                      DISPLAY_Set@D4 002B                        DISPLAY_Set@D5 002C  
                      DISPLAY_Set@D6 002D                            _pRTCArray 001E  
                        __pbssCOMRAM 0001           __end_of_MCU_SetModeDisplay 0732  
                    ?_SYSTEM_Process 0022                          _DISPLAY_Set 002A  
                          __pintcode 0008                             ?___awdiv 0023  
                           ?___awmod 0023                        _DISPLAY_Reset 095C  
                        __pintcodelo 0018                 __end_of_I2C1_ReStart 09F6  
                     _I2C1_Send_NACK 0978              ??_INTERRUPT_HighManager 0022  
                      _TMR0_OVR_FLAG 001B                    ??_TMR0_Initialize 0023  
                     _MCU_Initialize 0916                             _LATBbits 000F8A  
               _INTERRUPT_LowManager 0018                  _Get_DS1307_RTC_Date 0732  
                   ??_DISPLAY_Update 0028                             _PIR1bits 000F9E  
                         _I2C1_Start 09CE                  _Get_DS1307_RTC_Time 0470  
                           _PIR3bits 000FA4                             _RCONbits 000FD0  
    Read_Bytes_From_DS1307_RTC@pData 0024                       ?_DISPLAY_Reset 0022  
                           _SSP1CON1 000FC6                             _SSP2CON1 000F6C  
             __end_of_I2C1_Send_NACK 098E                             _SSP1STAT 000FC7  
                           _SSP2STAT 000F6D                          _displayMode 001D  
                      _timeToDisplay 0008                 ?_Get_DS1307_RTC_Date 002B  
               ?_Get_DS1307_RTC_Time 002B              _DRIVER_74HC595_ShiftOut 079A  
                        _dotsCounter 0017                          _INTCON2bits 000FF1  
                          copy_data0 0806               __end_of_MCU_Initialize 093E  
              ?_INTERRUPT_LowManager 0022                             __Hrparam 0000  
                           __Lrparam 0000                      ?_I2C1_Send_NACK 0022  
            ??_OSCILLATOR_Initialize 0023                ??_Get_DS1307_RTC_Date 002D  
              ??_Get_DS1307_RTC_Time 002D                             _mSeconds 0019  
                _UpdateDateToDisplay 01B4                             __ptext10 09BA  
                           __ptext11 09CE                             __ptext20 0A32  
                           __ptext12 0978                             __ptext21 0916  
                           __ptext13 098E                             __ptext22 0A2A  
                           __ptext14 08C4                             __ptext23 0A08  
                           __ptext15 09A4                             __ptext24 095C  
                           __ptext16 09E2                             __ptext25 002A  
                           __ptext17 06C6                             __ptext26 082C  
                           __ptext18 08EE                             __ptext27 079A  
                           __ptext19 093E                         _SSP1CON2bits 000FC5  
                      _I2C1_Send_ACK 098E                         _SSP2CON2bits 000F6B  
                    ?_MCU_Initialize 0022                      ??_DISPLAY_Reset 0031  
                        ?_I2C1_Start 0022                 ?_UpdateDateToDisplay 0031  
                           isa$xinst 000000                             int$flags 0048  
          ??_DRIVER_74HC595_ShiftOut 0023                           _INTCONbits 000FF2  
       ??_Read_Bytes_From_DS1307_RTC 0028                       ?_I2C1_Send_ACK 0022  
                           intlevel1 0000                             intlevel2 0000  
                       _I2C1_ReStart 09E2                     ??_SYSTEM_Process 0036  
             ??_INTERRUPT_LowManager 0022          DRIVER_74HC595_ShiftOut@data 0026  
              ??_UpdateDateToDisplay 0033                           _OSCCONbits 000FD3  
                       ?_DISPLAY_Set 0029                        I2C1_Send@BYTE 0023  
                 _MCU_SetModeDisplay 06C6        __end_of_INTERRUPT_HighManager 08C4  
                    _TMR0_Initialize 093E                  ?_MCU_SetModeDisplay 0022  
                     _display_values 000F                  _NUMBERS_OF_DISPLAYS 0047  
               ??_MCU_SetModeDisplay 0023  
